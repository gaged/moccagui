
*******************************************************************************
ResetAll
*******************************************************************************
(blockn, resultdef = "untyped", pos = (129,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (130,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (130,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (130,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MAXX
         )
         (realconstn, resultdef = "Double", pos = (130,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (130,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (130,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (130,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MINX
         )
         (realconstn, resultdef = "Double", pos = (130,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (131,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (131,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (131,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MAXY
         )
         (realconstn, resultdef = "Double", pos = (131,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (131,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (131,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (131,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MINY
         )
         (realconstn, resultdef = "Double", pos = (131,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (132,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (132,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (132,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MAXZ
         )
         (realconstn, resultdef = "Double", pos = (132,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (132,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (132,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (132,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = MINZ
         )
         (realconstn, resultdef = "Double", pos = (132,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PA
         )
         (realconstn, resultdef = "Double", pos = (133,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PB
         )
         (realconstn, resultdef = "Double", pos = (133,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PC
         )
         (realconstn, resultdef = "Double", pos = (133,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PX
         )
         (realconstn, resultdef = "Double", pos = (133,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PY
         )
         (realconstn, resultdef = "Double", pos = (133,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (133,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (133,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (133,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PZ
         )
         (realconstn, resultdef = "Double", pos = (133,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OA
         )
         (realconstn, resultdef = "Double", pos = (134,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OB
         )
         (realconstn, resultdef = "Double", pos = (134,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OC
         )
         (realconstn, resultdef = "Double", pos = (134,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OX
         )
         (realconstn, resultdef = "Double", pos = (134,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OY
         )
         (realconstn, resultdef = "Double", pos = (134,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (134,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (134,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (134,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = OZ
         )
         (realconstn, resultdef = "Double", pos = (134,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
)

*******************************************************************************
AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
*******************************************************************************
(blockn, resultdef = "untyped", pos = (144,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (146,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (146,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (146,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (146,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )
            (loadn, resultdef = "Double", pos = (146,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINX
            )
         )
         (assignn, resultdef = "untyped", pos = (146,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (146,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINX
            )
            (loadn, resultdef = "Double", pos = (146,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (147,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (147,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (gtn, resultdef = "Boolean", pos = (147,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (147,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )
            (loadn, resultdef = "Double", pos = (147,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXX
            )
         )
         (assignn, resultdef = "untyped", pos = (147,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (147,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXX
            )
            (loadn, resultdef = "Double", pos = (147,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (148,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (148,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (148,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (148,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )
            (loadn, resultdef = "Double", pos = (148,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINY
            )
         )
         (assignn, resultdef = "untyped", pos = (148,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (148,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINY
            )
            (loadn, resultdef = "Double", pos = (148,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (149,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (149,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (gtn, resultdef = "Boolean", pos = (149,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (149,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )
            (loadn, resultdef = "Double", pos = (149,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXY
            )
         )
         (assignn, resultdef = "untyped", pos = (149,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (149,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXY
            )
            (loadn, resultdef = "Double", pos = (149,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (150,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (150,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (150,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (150,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )
            (loadn, resultdef = "Double", pos = (150,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINZ
            )
         )
         (assignn, resultdef = "untyped", pos = (150,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (150,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MINZ
            )
            (loadn, resultdef = "Double", pos = (150,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (151,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (151,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (gtn, resultdef = "Boolean", pos = (151,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (151,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )
            (loadn, resultdef = "Double", pos = (151,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXZ
            )
         )
         (assignn, resultdef = "untyped", pos = (151,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (151,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = MAXZ
            )
            (loadn, resultdef = "Double", pos = (151,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "^TLineItem", pos = (154,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ITEM
         )
         (blockn, resultdef = "^TLineItem", pos = (154,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "^TLineItem", tempinfo = $B4B0E3E0
               )

            )
            (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "^TLineItem", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "^TLineItem", tempinfo = $B4B0E3E0
                  )
                  (typeconvn, resultdef = "^TLineItem", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (calln, resultdef = "^untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_getmem(LongInt):^untyped
                        left =
                        (callparan, resultdef = "LongInt", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 56
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "^TLineItem", tempinfo = $B4B0E3E0
               )

            )
            (statementn, resultdef = <nil>, pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^TLineItem", pos = (154,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^TLineItem", tempinfo = $B4B0E3E0
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (168,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (155,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (155,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "^Char", pos = (155,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
               (loadn, resultdef = "^TLineItem", pos = (155,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = ITEM
               )
            )
            (niln, resultdef = "^Char", pos = (155,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )
         )
         (blockn, resultdef = "LongInt", pos = (156,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (157,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (157,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Byte", pos = (157,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (157,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (157,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Byte", pos = (157,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = T
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (159,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (159,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (159,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (159,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (159,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (159,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = X
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (160,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (160,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (160,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (160,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (160,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (160,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = Y
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (161,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (161,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (161,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (161,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (161,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (161,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = Z
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (162,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (162,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (162,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (162,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (162,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (162,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = A
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (163,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (163,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (163,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (163,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (163,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (163,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = B
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (164,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (164,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "Double", pos = (164,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (derefn, resultdef = "<record type>", pos = (164,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "^TLineItem", pos = (164,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )
                  )
                  (loadn, resultdef = "Double", pos = (164,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = C
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (165,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "LongInt", pos = (165,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TList.Add(< TList>, Pointer):LongInt
                  methodpointer =
                  (loadn, resultdef = "TList", pos = (165,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )
                  left =
                  (callparan, resultdef = "^untyped", pos = (165,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "^untyped", pos = (165,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                        (loadn, resultdef = "^TLineItem", pos = (165,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ITEM
                        )
                     )

                  )
                  (callparan, resultdef = "TList", pos = (165,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TList", pos = (165,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = LINEITEMS
                     )

                  )
               )

            )
         )
         (assignn, resultdef = "untyped", pos = (168,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Boolean", pos = (168,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = DOABORTBUILDLIST
            )
            (ordconstn, resultdef = "Boolean", pos = (168,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         nil
      )

   )
)

*******************************************************************************
local inter(Double, Double):Double
*******************************************************************************
(blockn, resultdef = "untyped", pos = (188,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (189,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (typeconvn, resultdef = "Double", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
            (loadn, resultdef = "Double", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = result
            )
         )
         (addn, resultdef = "Double", pos = (189,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (189,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = L
            )
            (slashn, resultdef = "Double", pos = (189,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (muln, resultdef = "Double", pos = (189,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subn, resultdef = "Double", pos = (189,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = H
                     )
                     (loadn, resultdef = "Double", pos = (189,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = L
                     )
                  )
                  (typeconvn, resultdef = "Double", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
                     (loadn, resultdef = "LongInt", pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = <nil>, pos = (189,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )
                        symbol = I
                     )
                  )
               )
               (typeconvn, resultdef = "Double", pos = (189,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
                  (loadn, resultdef = "LongInt", pos = (189,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadparentfpn, resultdef = <nil>, pos = (189,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                     )
                     symbol = STEPS
                  )
               )
            )
         )
      )

   )
)

*******************************************************************************
ArcToSeg1(Double, Double, Double, Double, LongInt, Double, Double, Double, Double, Double, Double, Double)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (192,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (291,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (193,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (equaln, resultdef = "Boolean", pos = (193,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (193,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = ACTIVE_PLANE
            )
            (ordconstn, resultdef = "LongInt", pos = (193,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         (blockn, resultdef = "untyped", pos = (194,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (195,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (195,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (195,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = NX
                  )
                  (addn, resultdef = "Double", pos = (195,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (195,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = X1
                     )
                     (loadn, resultdef = "Double", pos = (195,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OX
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (196,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (196,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (196,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = NY
                  )
                  (addn, resultdef = "Double", pos = (196,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (196,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = Y1
                     )
                     (loadn, resultdef = "Double", pos = (196,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OY
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (197,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (197,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (197,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = NZ
                  )
                  (addn, resultdef = "Double", pos = (197,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (197,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = Z1
                     )
                     (loadn, resultdef = "Double", pos = (197,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OZ
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (198,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (198,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (198,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = CX
                  )
                  (addn, resultdef = "Double", pos = (198,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (198,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX1
                     )
                     (loadn, resultdef = "Double", pos = (198,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OX
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (199,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (199,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (199,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = CY
                  )
                  (addn, resultdef = "Double", pos = (199,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (199,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY1
                     )
                     (loadn, resultdef = "Double", pos = (199,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OY
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (200,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (200,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (200,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = THETA1
                  )
                  (typeconvn, resultdef = "Double", pos = (200,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (calln, resultdef = "Extended", pos = (200,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = arctan2(Extended, Extended):Extended
                        left =
                        (callparan, resultdef = "Extended", pos = (200,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (200,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (200,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (200,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PX
                                 )
                                 (loadn, resultdef = "Double", pos = (200,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CX
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "Extended", pos = (200,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (200,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (200,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (200,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PY
                                 )
                                 (loadn, resultdef = "Double", pos = (200,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CY
                                 )
                              )
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (201,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (201,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (201,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = THETA2
                  )
                  (typeconvn, resultdef = "Double", pos = (201,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (calln, resultdef = "Extended", pos = (201,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = arctan2(Extended, Extended):Extended
                        left =
                        (callparan, resultdef = "Extended", pos = (201,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (201,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (201,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (201,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = NX
                                 )
                                 (loadn, resultdef = "Double", pos = (201,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CX
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "Extended", pos = (201,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (201,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (201,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (201,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = NY
                                 )
                                 (loadn, resultdef = "Double", pos = (201,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CY
                                 )
                              )
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (202,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (202,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (202,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = RAD
                  )
                  (typeconvn, resultdef = "Double", pos = (202,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (calln, resultdef = "Extended", pos = (202,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = hypot(Extended, Extended):Extended
                        left =
                        (callparan, resultdef = "Extended", pos = (202,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (202,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (202,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (202,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PY
                                 )
                                 (loadn, resultdef = "Double", pos = (202,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CY
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "Extended", pos = (202,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (202,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (subn, resultdef = "Double", pos = (202,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (202,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PX
                                 )
                                 (loadn, resultdef = "Double", pos = (202,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = CX
                                 )
                              )
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (212,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (203,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ltn, resultdef = "Boolean", pos = (203,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (203,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROT
                     )
                     (ordconstn, resultdef = "LongInt", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (blockn, resultdef = "untyped", pos = (204,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (207,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ifn, resultdef = "untyped", pos = (205,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (gten, resultdef = "Boolean", pos = (205,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (205,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                              (loadn, resultdef = "Double", pos = (205,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA1
                              )
                           )
                           (assignn, resultdef = "untyped", pos = (206,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (206,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                              (typeconvn, resultdef = "Double", pos = (207,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Extended", pos = (207,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (typeconvn, resultdef = "Extended", pos = (206,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (206,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = THETA2
                                       )
                                    )
                                    (muln, resultdef = "Extended", pos = (206,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (206,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                       )
                                       (realconstn, resultdef = "Extended", pos = (206,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          value =  2.0000000000000000E+0000
                                       )
                                    )
                                 )
                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
                  (blockn, resultdef = "untyped", pos = (209,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (212,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ifn, resultdef = "untyped", pos = (210,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (lten, resultdef = "Boolean", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (210,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                              (loadn, resultdef = "Double", pos = (210,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA1
                              )
                           )
                           (assignn, resultdef = "untyped", pos = (211,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (211,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                              (typeconvn, resultdef = "Double", pos = (212,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (addn, resultdef = "Extended", pos = (212,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (typeconvn, resultdef = "Extended", pos = (211,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (211,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = THETA2
                                       )
                                    )
                                    (muln, resultdef = "Extended", pos = (211,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (211,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                       )
                                       (realconstn, resultdef = "Extended", pos = (211,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          value =  2.0000000000000000E+0000
                                       )
                                    )
                                 )
                              )
                           )
                           nil
                           nil
                        )

                     )
                  )
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (213,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (213,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "LongInt", pos = (213,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STEPS
                  )
                  (typeconvn, resultdef = "LongInt", pos = (213,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                     (calln, resultdef = "Int64", pos = (213,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Max(Int64, Int64):Int64
                        left =
                        (callparan, resultdef = "Int64", pos = (213,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (inlinen, resultdef = "Int64", pos = (213,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (slashn, resultdef = "Extended", pos = (213,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (muln, resultdef = "Extended", pos = (213,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (realconstn, resultdef = "Extended", pos = (213,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       value =  1.2800000000000000E+0002
                                    )
                                    (inlinen, resultdef = "Extended", pos = (213,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (213,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (subn, resultdef = "Double", pos = (213,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             (loadn, resultdef = "Double", pos = (213,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA1
                                             )
                                             (loadn, resultdef = "Double", pos = (213,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA2
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (inlinen, resultdef = "Extended", pos = (213,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "Int64", pos = (213,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "Int64", pos = (213,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 8
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (223,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (forn, resultdef = "untyped", pos = (214,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "LongInt", pos = (214,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = I
                  )
                  (ordconstn, resultdef = "LongInt", pos = (214,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )
                  (loadn, resultdef = "LongInt", pos = (214,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STEPS
                  )
                  (blockn, resultdef = "untyped", pos = (215,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (216,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (216,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (216,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = THETA
                           )
                           (calln, resultdef = "Double", pos = (216,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = local inter(< Pointer>, Double, Double):Double
                              left =
                              (callparan, resultdef = "Double", pos = (216,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (216,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (216,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA1
                                 )

                              )
                              (callparan, resultdef = "^untyped", pos = (216,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadparentfpn, resultdef = "^untyped", pos = (216,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (217,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (217,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (217,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = X
                           )
                           (typeconvn, resultdef = "Double", pos = (217,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (addn, resultdef = "Extended", pos = (217,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (muln, resultdef = "Extended", pos = (217,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (inlinen, resultdef = "Extended", pos = (217,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (217,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (217,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (217,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (217,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = RAD
                                       )
                                    )
                                 )
                                 (typeconvn, resultdef = "Extended", pos = (217,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (loadn, resultdef = "Double", pos = (217,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (218,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (218,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (218,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = Y
                           )
                           (typeconvn, resultdef = "Double", pos = (218,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (addn, resultdef = "Extended", pos = (218,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (muln, resultdef = "Extended", pos = (218,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (inlinen, resultdef = "Extended", pos = (218,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (218,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (218,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (218,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (218,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = RAD
                                       )
                                    )
                                 )
                                 (typeconvn, resultdef = "Extended", pos = (218,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (loadn, resultdef = "Double", pos = (218,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (219,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (219,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (219,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = Z
                           )
                           (calln, resultdef = "Double", pos = (219,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = local inter(< Pointer>, Double, Double):Double
                              left =
                              (callparan, resultdef = "Double", pos = (219,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (219,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = NZ
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (219,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (219,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PZ
                                 )

                              )
                              (callparan, resultdef = "^untyped", pos = (219,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadparentfpn, resultdef = "^untyped", pos = (219,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                 )

                              )
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (220,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "Boolean", pos = (220,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
                           left =
                           (callparan, resultdef = "Double", pos = (220,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = C
                              )

                           )
                           (callparan, resultdef = "Double", pos = (220,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = B
                              )

                           )
                           (callparan, resultdef = "Double", pos = (220,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = A
                              )

                           )
                           (callparan, resultdef = "Double", pos = (220,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Z
                              )

                           )
                           (callparan, resultdef = "Double", pos = (220,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Y
                              )

                           )
                           (callparan, resultdef = "Double", pos = (220,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (220,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = X
                              )

                           )
                           (callparan, resultdef = "Byte", pos = (220,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "Byte", pos = (220,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 3
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (222,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ifn, resultdef = "untyped", pos = (221,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Boolean", pos = (221,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = DOABORTBUILDLIST
                           )
                           (breakn, resultdef = "untyped", pos = (222,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )
                           nil
                           nil
                        )

                     )
                  )
               )

            )
         )
         (ifn, resultdef = "untyped", pos = (226,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (equaln, resultdef = "Boolean", pos = (226,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "LongInt", pos = (226,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = ACTIVE_PLANE
               )
               (ordconstn, resultdef = "LongInt", pos = (226,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 3
               )
            )
            (blockn, resultdef = "untyped", pos = (227,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (228,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (228,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (228,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NX
                     )
                     (addn, resultdef = "Double", pos = (228,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (228,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Y1
                        )
                        (loadn, resultdef = "Double", pos = (228,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (229,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (229,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (229,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NY
                     )
                     (addn, resultdef = "Double", pos = (229,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (229,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Z1
                        )
                        (loadn, resultdef = "Double", pos = (229,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (230,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (230,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (230,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NZ
                     )
                     (addn, resultdef = "Double", pos = (230,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (230,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = X1
                        )
                        (loadn, resultdef = "Double", pos = (230,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (231,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (231,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (231,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX
                     )
                     (addn, resultdef = "Double", pos = (231,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (231,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX1
                        )
                        (loadn, resultdef = "Double", pos = (231,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (232,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (232,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (232,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY
                     )
                     (addn, resultdef = "Double", pos = (232,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (232,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY1
                        )
                        (loadn, resultdef = "Double", pos = (232,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (233,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (233,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (233,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA1
                     )
                     (typeconvn, resultdef = "Double", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = arctan2(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (233,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (233,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (233,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (233,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PZ
                                    )
                                    (loadn, resultdef = "Double", pos = (233,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (233,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (233,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PX
                                    )
                                    (loadn, resultdef = "Double", pos = (233,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (235,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (235,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (235,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (typeconvn, resultdef = "Double", pos = (235,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (235,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = arctan2(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (235,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (235,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (235,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (235,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = NX
                                    )
                                    (loadn, resultdef = "Double", pos = (235,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (235,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (235,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (235,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (235,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = NZ
                                    )
                                    (loadn, resultdef = "Double", pos = (235,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (236,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (236,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (236,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = RAD
                     )
                     (typeconvn, resultdef = "Double", pos = (236,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (236,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = hypot(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (236,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (236,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (236,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (236,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PX
                                    )
                                    (loadn, resultdef = "Double", pos = (236,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (236,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (236,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (236,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (236,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PZ
                                    )
                                    (loadn, resultdef = "Double", pos = (236,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (247,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ifn, resultdef = "untyped", pos = (238,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ltn, resultdef = "Boolean", pos = (238,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "LongInt", pos = (238,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ROT
                        )
                        (ordconstn, resultdef = "LongInt", pos = (238,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (blockn, resultdef = "untyped", pos = (239,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (242,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (240,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (gten, resultdef = "Boolean", pos = (240,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (240,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (loadn, resultdef = "Double", pos = (240,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA1
                                 )
                              )
                              (assignn, resultdef = "untyped", pos = (241,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (241,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (typeconvn, resultdef = "Double", pos = (242,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (subn, resultdef = "Extended", pos = (242,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (241,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (241,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA2
                                          )
                                       )
                                       (muln, resultdef = "Extended", pos = (241,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (inlinen, resultdef = "Extended", pos = (241,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                          )
                                          (realconstn, resultdef = "Extended", pos = (241,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value =  2.0000000000000000E+0000
                                          )
                                       )
                                    )
                                 )
                              )
                              nil
                              nil
                           )

                        )
                     )
                     (blockn, resultdef = "untyped", pos = (244,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (247,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (245,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (lten, resultdef = "Boolean", pos = (245,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (245,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (loadn, resultdef = "Double", pos = (245,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA1
                                 )
                              )
                              (assignn, resultdef = "untyped", pos = (246,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (246,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (typeconvn, resultdef = "Double", pos = (247,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (addn, resultdef = "Extended", pos = (247,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (246,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (246,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA2
                                          )
                                       )
                                       (muln, resultdef = "Extended", pos = (246,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (inlinen, resultdef = "Extended", pos = (246,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                          )
                                          (realconstn, resultdef = "Extended", pos = (246,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value =  2.0000000000000000E+0000
                                          )
                                       )
                                    )
                                 )
                              )
                              nil
                              nil
                           )

                        )
                     )
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (248,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (248,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (248,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STEPS
                     )
                     (typeconvn, resultdef = "LongInt", pos = (248,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (calln, resultdef = "Int64", pos = (248,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = Max(Int64, Int64):Int64
                           left =
                           (callparan, resultdef = "Int64", pos = (248,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (inlinen, resultdef = "Int64", pos = (248,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (slashn, resultdef = "Extended", pos = (248,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (248,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (realconstn, resultdef = "Extended", pos = (248,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          value =  1.2800000000000000E+0002
                                       )
                                       (inlinen, resultdef = "Extended", pos = (248,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (248,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (subn, resultdef = "Double", pos = (248,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (loadn, resultdef = "Double", pos = (248,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = THETA1
                                                )
                                                (loadn, resultdef = "Double", pos = (248,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = THETA2
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (inlinen, resultdef = "Extended", pos = (248,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Int64", pos = (248,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "Int64", pos = (248,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 8
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (258,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (forn, resultdef = "untyped", pos = (249,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (249,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = I
                     )
                     (ordconstn, resultdef = "LongInt", pos = (249,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                     (loadn, resultdef = "LongInt", pos = (249,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STEPS
                     )
                     (blockn, resultdef = "untyped", pos = (250,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (251,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (251,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (251,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA
                              )
                              (calln, resultdef = "Double", pos = (251,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 proc = local inter(< Pointer>, Double, Double):Double
                                 left =
                                 (callparan, resultdef = "Double", pos = (251,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (251,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = THETA2
                                    )

                                 )
                                 (callparan, resultdef = "Double", pos = (251,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (251,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = THETA1
                                    )

                                 )
                                 (callparan, resultdef = "^untyped", pos = (251,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadparentfpn, resultdef = "^untyped", pos = (251,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                    )

                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (252,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (252,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (252,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Z
                              )
                              (typeconvn, resultdef = "Double", pos = (252,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (addn, resultdef = "Extended", pos = (252,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (252,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (252,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (252,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (loadn, resultdef = "Double", pos = (252,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA
                                             )
                                          )
                                       )
                                       (typeconvn, resultdef = "Extended", pos = (252,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (252,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = RAD
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (252,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (252,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = CX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (253,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (253,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (253,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = X
                              )
                              (typeconvn, resultdef = "Double", pos = (253,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (addn, resultdef = "Extended", pos = (253,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (253,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (253,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (253,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (loadn, resultdef = "Double", pos = (253,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA
                                             )
                                          )
                                       )
                                       (typeconvn, resultdef = "Extended", pos = (253,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (253,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = RAD
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (253,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (253,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = CY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (254,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (254,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (254,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Y
                              )
                              (loadn, resultdef = "Double", pos = (254,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = PY
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (255,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (calln, resultdef = "Boolean", pos = (255,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
                              left =
                              (callparan, resultdef = "Double", pos = (255,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = C
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (255,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = B
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (255,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = A
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (255,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = Z
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (255,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = Y
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (255,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (255,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )

                              )
                              (callparan, resultdef = "Byte", pos = (255,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (ordconstn, resultdef = "Byte", pos = (255,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 3
                                 )

                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (257,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (256,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Boolean", pos = (256,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = DOABORTBUILDLIST
                              )
                              (breakn, resultdef = "untyped", pos = (257,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              )
                              nil
                              nil
                           )

                        )
                     )
                  )

               )
            )
            (blockn, resultdef = "untyped", pos = (261,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (262,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (262,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (262,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NX
                     )
                     (addn, resultdef = "Double", pos = (262,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (262,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Z1
                        )
                        (loadn, resultdef = "Double", pos = (262,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (263,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (263,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (263,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NY
                     )
                     (addn, resultdef = "Double", pos = (263,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (263,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = X1
                        )
                        (loadn, resultdef = "Double", pos = (263,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (264,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (264,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (264,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = NZ
                     )
                     (addn, resultdef = "Double", pos = (264,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (264,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Y1
                        )
                        (loadn, resultdef = "Double", pos = (264,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (265,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (265,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (265,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX
                     )
                     (addn, resultdef = "Double", pos = (265,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (265,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX1
                        )
                        (loadn, resultdef = "Double", pos = (265,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (266,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (266,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (266,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY
                     )
                     (addn, resultdef = "Double", pos = (266,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (266,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY1
                        )
                        (loadn, resultdef = "Double", pos = (266,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (267,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (267,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (267,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA1
                     )
                     (typeconvn, resultdef = "Double", pos = (267,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (267,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = arctan2(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (267,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (267,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (267,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (267,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PY
                                    )
                                    (loadn, resultdef = "Double", pos = (267,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (267,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (267,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (267,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (267,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PZ
                                    )
                                    (loadn, resultdef = "Double", pos = (267,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (268,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (268,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (268,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (typeconvn, resultdef = "Double", pos = (268,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (268,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = arctan2(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (268,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (268,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (268,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (268,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = NY
                                    )
                                    (loadn, resultdef = "Double", pos = (268,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (268,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (268,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (268,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (268,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = NZ
                                    )
                                    (loadn, resultdef = "Double", pos = (268,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (269,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (269,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (269,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = RAD
                     )
                     (typeconvn, resultdef = "Double", pos = (269,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (calln, resultdef = "Extended", pos = (269,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = hypot(Extended, Extended):Extended
                           left =
                           (callparan, resultdef = "Extended", pos = (269,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (269,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (269,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (269,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PZ
                                    )
                                    (loadn, resultdef = "Double", pos = (269,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CY
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Extended", pos = (269,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (269,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (subn, resultdef = "Double", pos = (269,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (269,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PY
                                    )
                                    (loadn, resultdef = "Double", pos = (269,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = CX
                                    )
                                 )
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (279,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ifn, resultdef = "untyped", pos = (270,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ltn, resultdef = "Boolean", pos = (270,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "LongInt", pos = (270,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = ROT
                        )
                        (ordconstn, resultdef = "LongInt", pos = (270,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (blockn, resultdef = "untyped", pos = (271,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (274,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (272,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (gten, resultdef = "Boolean", pos = (272,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (272,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (loadn, resultdef = "Double", pos = (272,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA1
                                 )
                              )
                              (assignn, resultdef = "untyped", pos = (273,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (273,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (typeconvn, resultdef = "Double", pos = (274,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (subn, resultdef = "Extended", pos = (274,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (273,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (273,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA2
                                          )
                                       )
                                       (muln, resultdef = "Extended", pos = (273,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (inlinen, resultdef = "Extended", pos = (273,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                          )
                                          (realconstn, resultdef = "Extended", pos = (273,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value =  2.0000000000000000E+0000
                                          )
                                       )
                                    )
                                 )
                              )
                              nil
                              nil
                           )

                        )
                     )
                     (blockn, resultdef = "untyped", pos = (276,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (279,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (277,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (lten, resultdef = "Boolean", pos = (277,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (277,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (loadn, resultdef = "Double", pos = (277,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA1
                                 )
                              )
                              (assignn, resultdef = "untyped", pos = (278,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (278,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA2
                                 )
                                 (typeconvn, resultdef = "Double", pos = (279,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (addn, resultdef = "Extended", pos = (279,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (typeconvn, resultdef = "Extended", pos = (278,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (278,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = THETA2
                                          )
                                       )
                                       (muln, resultdef = "Extended", pos = (278,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (inlinen, resultdef = "Extended", pos = (278,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                          )
                                          (realconstn, resultdef = "Extended", pos = (278,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value =  2.0000000000000000E+0000
                                          )
                                       )
                                    )
                                 )
                              )
                              nil
                              nil
                           )

                        )
                     )
                     nil
                  )

               )
               (statementn, resultdef = <nil>, pos = (280,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (280,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (280,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STEPS
                     )
                     (typeconvn, resultdef = "LongInt", pos = (280,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (calln, resultdef = "Int64", pos = (280,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = Max(Int64, Int64):Int64
                           left =
                           (callparan, resultdef = "Int64", pos = (280,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (inlinen, resultdef = "Int64", pos = (280,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (slashn, resultdef = "Extended", pos = (280,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (280,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (realconstn, resultdef = "Extended", pos = (280,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          value =  1.2800000000000000E+0002
                                       )
                                       (inlinen, resultdef = "Extended", pos = (280,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (280,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (subn, resultdef = "Double", pos = (280,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (loadn, resultdef = "Double", pos = (280,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = THETA1
                                                )
                                                (loadn, resultdef = "Double", pos = (280,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = THETA2
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (inlinen, resultdef = "Extended", pos = (280,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "Int64", pos = (280,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "Int64", pos = (280,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 8
                              )

                           )
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (290,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (forn, resultdef = "untyped", pos = (281,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (281,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = I
                     )
                     (ordconstn, resultdef = "LongInt", pos = (281,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                     (loadn, resultdef = "LongInt", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STEPS
                     )
                     (blockn, resultdef = "untyped", pos = (282,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (statementn, resultdef = <nil>, pos = (283,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (283,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (283,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA
                              )
                              (calln, resultdef = "Double", pos = (283,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 proc = local inter(< Pointer>, Double, Double):Double
                                 left =
                                 (callparan, resultdef = "Double", pos = (283,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (283,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = THETA2
                                    )

                                 )
                                 (callparan, resultdef = "Double", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (283,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = THETA1
                                    )

                                 )
                                 (callparan, resultdef = "^untyped", pos = (283,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadparentfpn, resultdef = "^untyped", pos = (283,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                    )

                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (284,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (284,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (284,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Y
                              )
                              (typeconvn, resultdef = "Double", pos = (284,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (addn, resultdef = "Extended", pos = (284,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (284,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (284,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (284,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (loadn, resultdef = "Double", pos = (284,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA
                                             )
                                          )
                                       )
                                       (typeconvn, resultdef = "Extended", pos = (284,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (284,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = RAD
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (284,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (284,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = CX
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (285,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (285,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (285,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = Z
                              )
                              (typeconvn, resultdef = "Double", pos = (285,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (addn, resultdef = "Extended", pos = (285,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (muln, resultdef = "Extended", pos = (285,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (inlinen, resultdef = "Extended", pos = (285,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Extended", pos = (285,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                             (loadn, resultdef = "Double", pos = (285,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = THETA
                                             )
                                          )
                                       )
                                       (typeconvn, resultdef = "Extended", pos = (285,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                          (loadn, resultdef = "Double", pos = (285,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = RAD
                                          )
                                       )
                                    )
                                    (typeconvn, resultdef = "Extended", pos = (285,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                       (loadn, resultdef = "Double", pos = (285,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = CY
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (286,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (assignn, resultdef = "untyped", pos = (286,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (286,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = X
                              )
                              (loadn, resultdef = "Double", pos = (286,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = PX
                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (287,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (calln, resultdef = "Boolean", pos = (287,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
                              left =
                              (callparan, resultdef = "Double", pos = (287,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = C
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (287,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = B
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (287,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = A
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (287,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = Z
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (287,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = Y
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (287,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (287,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )

                              )
                              (callparan, resultdef = "Byte", pos = (287,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (ordconstn, resultdef = "Byte", pos = (287,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 3
                                 )

                              )
                           )

                        )
                        (statementn, resultdef = <nil>, pos = (289,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ifn, resultdef = "untyped", pos = (288,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Boolean", pos = (288,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = DOABORTBUILDLIST
                              )
                              (breakn, resultdef = "untyped", pos = (289,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              )
                              nil
                              nil
                           )

                        )
                     )
                  )

               )
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (295,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0E440
            )

         )
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0E440
               )
               (typeconvn, resultdef = "^untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
               left =
               (callparan, resultdef = "Boolean", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )

               )
               (callparan, resultdef = "LongInt", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 11
                  )

               )
               (callparan, resultdef = "Open Array Of Char", pos = (295,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "Constant String", pos = (295,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (callparan, resultdef = "Text", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E440
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E440
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (295,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E440
            )

         )
      )

   )
)

*******************************************************************************
local inter(Double, Double):Double
*******************************************************************************
(blockn, resultdef = "untyped", pos = (317,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (318,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (318,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (typeconvn, resultdef = "Double", pos = (318,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
            (loadn, resultdef = "Double", pos = (318,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = result
            )
         )
         (addn, resultdef = "Double", pos = (318,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (318,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = L
            )
            (slashn, resultdef = "Double", pos = (318,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (muln, resultdef = "Double", pos = (318,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subn, resultdef = "Double", pos = (318,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (318,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = H
                     )
                     (loadn, resultdef = "Double", pos = (318,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = L
                     )
                  )
                  (typeconvn, resultdef = "Double", pos = (318,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
                     (loadn, resultdef = "LongInt", pos = (318,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = <nil>, pos = (318,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )
                        symbol = I
                     )
                  )
               )
               (typeconvn, resultdef = "Double", pos = (318,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
                  (loadn, resultdef = "LongInt", pos = (318,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadparentfpn, resultdef = <nil>, pos = (318,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                     )
                     symbol = STEPS
                  )
               )
            )
         )
      )

   )
)

*******************************************************************************
ArcToSeg2(Double, Double, Double, Double, LongInt, Double, Double, Double, Double, Double, Double, Double)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (321,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (324,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0E6E0
            )

         )
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0E6E0
               )
               (typeconvn, resultdef = "^untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (324,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (324,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (324,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (324,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (324,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (324,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 2
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (324,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (324,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (324,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = OX
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (324,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (324,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = OY
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (324,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (324,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = OZ
                                    )
                                    nil
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (324,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E6E0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E6E0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (324,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E6E0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (349,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (328,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (equaln, resultdef = "Boolean", pos = (328,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (328,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = ACTIVE_PLANE
            )
            (ordconstn, resultdef = "LongInt", pos = (328,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         (blockn, resultdef = "untyped", pos = (329,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (330,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (330,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (330,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (330,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = N
                     )
                     (ordconstn, resultdef = "LongInt", pos = (330,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (addn, resultdef = "Double", pos = (330,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (330,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = X1
                     )
                     (loadn, resultdef = "Double", pos = (330,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OX
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (330,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (330,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (330,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (330,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = N
                     )
                     (ordconstn, resultdef = "LongInt", pos = (330,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                  )
                  (addn, resultdef = "Double", pos = (330,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (330,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = Y1
                     )
                     (loadn, resultdef = "Double", pos = (330,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OY
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (330,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (330,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (330,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (330,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = N
                     )
                     (ordconstn, resultdef = "LongInt", pos = (330,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 2
                     )
                  )
                  (addn, resultdef = "Double", pos = (330,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (330,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = Z1
                     )
                     (loadn, resultdef = "Double", pos = (330,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OZ
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (331,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (331,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (331,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = CX
                  )
                  (addn, resultdef = "Double", pos = (331,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (331,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX1
                     )
                     (loadn, resultdef = "Double", pos = (331,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OX
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (332,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (332,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (332,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = CY
                  )
                  (addn, resultdef = "Double", pos = (332,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (332,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY1
                     )
                     (loadn, resultdef = "Double", pos = (332,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OY
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (333,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (333,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Byte", pos = (333,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Byte", pos = (333,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = XYZ
                     )
                     (ordconstn, resultdef = "LongInt", pos = (333,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (ordconstn, resultdef = "Byte", pos = (333,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (333,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (333,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Byte", pos = (333,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Byte", pos = (333,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = XYZ
                     )
                     (ordconstn, resultdef = "LongInt", pos = (333,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                  )
                  (ordconstn, resultdef = "Byte", pos = (333,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (333,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (333,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Byte", pos = (333,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Byte", pos = (333,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = XYZ
                     )
                     (ordconstn, resultdef = "LongInt", pos = (333,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 2
                     )
                  )
                  (ordconstn, resultdef = "Byte", pos = (333,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 2
                  )
               )

            )
         )
         (ifn, resultdef = "untyped", pos = (336,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (equaln, resultdef = "Boolean", pos = (336,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "LongInt", pos = (336,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = ACTIVE_PLANE
               )
               (ordconstn, resultdef = "LongInt", pos = (336,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 3
               )
            )
            (blockn, resultdef = "untyped", pos = (337,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (338,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (338,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (338,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (338,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (338,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (addn, resultdef = "Double", pos = (338,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (338,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Y1
                        )
                        (loadn, resultdef = "Double", pos = (338,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (338,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (338,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (338,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (338,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (338,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 1
                        )
                     )
                     (addn, resultdef = "Double", pos = (338,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (338,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Z1
                        )
                        (loadn, resultdef = "Double", pos = (338,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (338,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (338,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (338,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (338,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )
                     )
                     (addn, resultdef = "Double", pos = (338,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (338,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = X1
                        )
                        (loadn, resultdef = "Double", pos = (338,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (339,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (339,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (339,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX
                     )
                     (addn, resultdef = "Double", pos = (339,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (339,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX1
                        )
                        (loadn, resultdef = "Double", pos = (339,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (340,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (340,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (340,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY
                     )
                     (addn, resultdef = "Double", pos = (340,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (340,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY1
                        )
                        (loadn, resultdef = "Double", pos = (340,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (341,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (341,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (341,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (341,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (341,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (341,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 2
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (341,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (341,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (341,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (341,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (341,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 1
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (341,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (341,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (341,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (341,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (341,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (341,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (341,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                  )

               )
            )
            (blockn, resultdef = "untyped", pos = (344,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (345,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (345,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (345,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (345,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (345,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (addn, resultdef = "Double", pos = (345,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (345,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Z1
                        )
                        (loadn, resultdef = "Double", pos = (345,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (345,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (345,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (345,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (345,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (345,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 1
                        )
                     )
                     (addn, resultdef = "Double", pos = (345,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (345,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = X1
                        )
                        (loadn, resultdef = "Double", pos = (345,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (345,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (345,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (345,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (345,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = N
                        )
                        (ordconstn, resultdef = "LongInt", pos = (345,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )
                     )
                     (addn, resultdef = "Double", pos = (345,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (345,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = Y1
                        )
                        (loadn, resultdef = "Double", pos = (345,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OZ
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (346,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (346,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (346,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CX
                     )
                     (addn, resultdef = "Double", pos = (346,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (346,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX1
                        )
                        (loadn, resultdef = "Double", pos = (346,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OY
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (347,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (347,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (347,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CY
                     )
                     (addn, resultdef = "Double", pos = (347,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (347,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY1
                        )
                        (loadn, resultdef = "Double", pos = (347,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = OX
                        )
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (348,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (348,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (348,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (348,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (348,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (348,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (348,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (348,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (348,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (348,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (348,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 1
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (348,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 2
                     )
                  )

               )
               (statementn, resultdef = <nil>, pos = (348,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (348,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Byte", pos = (348,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Byte", pos = (348,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = XYZ
                        )
                        (ordconstn, resultdef = "LongInt", pos = (348,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )
                     )
                     (ordconstn, resultdef = "Byte", pos = (348,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )

               )
            )
            nil
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (351,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (351,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (vecn, resultdef = "Double", pos = (351,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Array[0..2] Of Double", pos = (351,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = O
            )
            (ordconstn, resultdef = "LongInt", pos = (351,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (loadn, resultdef = "Double", pos = (351,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PX
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (351,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (351,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (vecn, resultdef = "Double", pos = (351,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Array[0..2] Of Double", pos = (351,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = O
            )
            (ordconstn, resultdef = "LongInt", pos = (351,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         (loadn, resultdef = "Double", pos = (351,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PY
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (351,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (351,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (vecn, resultdef = "Double", pos = (351,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Array[0..2] Of Double", pos = (351,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = O
            )
            (ordconstn, resultdef = "LongInt", pos = (351,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 2
            )
         )
         (loadn, resultdef = "Double", pos = (351,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PZ
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (353,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (353,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (353,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = THETA1
         )
         (typeconvn, resultdef = "Double", pos = (353,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (calln, resultdef = "Extended", pos = (353,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = arctan2(Extended, Extended):Extended
               left =
               (callparan, resultdef = "Extended", pos = (353,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (353,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (353,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (353,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (353,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = O
                           )
                           (typeconvn, resultdef = "LongInt", pos = (353,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (353,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (353,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (353,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 0
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (353,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX
                        )
                     )
                  )

               )
               (callparan, resultdef = "Extended", pos = (353,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (353,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (353,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (353,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (353,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = O
                           )
                           (typeconvn, resultdef = "LongInt", pos = (353,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (353,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (353,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (353,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 1
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (353,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY
                        )
                     )
                  )

               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (354,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (354,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (354,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = THETA2
         )
         (typeconvn, resultdef = "Double", pos = (354,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (calln, resultdef = "Extended", pos = (354,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = arctan2(Extended, Extended):Extended
               left =
               (callparan, resultdef = "Extended", pos = (354,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (354,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (354,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (354,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (354,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = N
                           )
                           (typeconvn, resultdef = "LongInt", pos = (354,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (354,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (354,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (354,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 0
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (354,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX
                        )
                     )
                  )

               )
               (callparan, resultdef = "Extended", pos = (354,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (354,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (354,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (354,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (354,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = N
                           )
                           (typeconvn, resultdef = "LongInt", pos = (354,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (354,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (354,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (354,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 1
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (354,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY
                        )
                     )
                  )

               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (355,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (355,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (355,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = RAD
         )
         (typeconvn, resultdef = "Double", pos = (355,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (calln, resultdef = "Extended", pos = (355,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = hypot(Extended, Extended):Extended
               left =
               (callparan, resultdef = "Extended", pos = (355,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (355,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (355,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (355,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (355,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = P
                           )
                           (typeconvn, resultdef = "LongInt", pos = (355,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (355,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (355,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (355,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 1
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (355,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CY
                        )
                     )
                  )

               )
               (callparan, resultdef = "Extended", pos = (355,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (355,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subn, resultdef = "Double", pos = (355,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (355,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (355,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = P
                           )
                           (typeconvn, resultdef = "LongInt", pos = (355,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (355,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (355,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (355,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 0
                                 )
                              )
                           )
                        )
                        (loadn, resultdef = "Double", pos = (355,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CX
                        )
                     )
                  )

               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (367,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (358,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (358,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (358,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = ROT
            )
            (ordconstn, resultdef = "LongInt", pos = (358,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (359,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (361,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (360,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (gten, resultdef = "Boolean", pos = (360,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (360,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (loadn, resultdef = "Double", pos = (360,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA1
                     )
                  )
                  (assignn, resultdef = "untyped", pos = (361,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (361,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (typeconvn, resultdef = "Double", pos = (361,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (subn, resultdef = "Extended", pos = (361,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (361,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (loadn, resultdef = "Double", pos = (361,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                           )
                           (muln, resultdef = "Extended", pos = (361,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (inlinen, resultdef = "Extended", pos = (361,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                              )
                              (realconstn, resultdef = "Extended", pos = (361,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  2.0000000000000000E+0000
                              )
                           )
                        )
                     )
                  )
                  nil
                  nil
               )

            )
         )
         (blockn, resultdef = "untyped", pos = (364,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (367,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (365,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (lten, resultdef = "Boolean", pos = (365,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (365,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (loadn, resultdef = "Double", pos = (365,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA1
                     )
                  )
                  (assignn, resultdef = "untyped", pos = (366,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (366,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = THETA2
                     )
                     (typeconvn, resultdef = "Double", pos = (366,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (addn, resultdef = "Extended", pos = (366,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Extended", pos = (366,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (loadn, resultdef = "Double", pos = (366,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = THETA2
                              )
                           )
                           (muln, resultdef = "Extended", pos = (366,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (inlinen, resultdef = "Extended", pos = (366,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                              )
                              (realconstn, resultdef = "Extended", pos = (366,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  2.0000000000000000E+0000
                              )
                           )
                        )
                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (369,62), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (369,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "LongInt", pos = (369,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = STEPS
         )
         (typeconvn, resultdef = "LongInt", pos = (369,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
            (calln, resultdef = "Int64", pos = (369,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = Max(Int64, Int64):Int64
               left =
               (callparan, resultdef = "Int64", pos = (369,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (inlinen, resultdef = "Int64", pos = (369,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (inlinen, resultdef = "Extended", pos = (369,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (slashn, resultdef = "Extended", pos = (369,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (muln, resultdef = "Extended", pos = (369,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Extended", pos = (369,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  1.2800000000000000E+0002
                              )
                              (inlinen, resultdef = "Extended", pos = (369,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (typeconvn, resultdef = "Extended", pos = (369,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                    (subn, resultdef = "Double", pos = (369,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (369,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = THETA1
                                       )
                                       (loadn, resultdef = "Double", pos = (369,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = THETA2
                                       )
                                    )
                                 )
                              )
                           )
                           (inlinen, resultdef = "Extended", pos = (369,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = "Int64", pos = (369,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Int64", pos = (369,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 8
                  )

               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (386,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (forn, resultdef = "untyped", pos = (371,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "LongInt", pos = (371,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = I
         )
         (ordconstn, resultdef = "LongInt", pos = (371,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 1
         )
         (loadn, resultdef = "LongInt", pos = (371,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = STEPS
         )
         (blockn, resultdef = "untyped", pos = (372,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (373,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (373,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (373,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = THETA
                  )
                  (calln, resultdef = "Double", pos = (373,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = local inter(< Pointer>, Double, Double):Double
                     left =
                     (callparan, resultdef = "Double", pos = (373,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (373,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = THETA2
                        )

                     )
                     (callparan, resultdef = "Double", pos = (373,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (373,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = THETA1
                        )

                     )
                     (callparan, resultdef = "^untyped", pos = (373,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = "^untyped", pos = (373,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (374,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (374,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (374,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (374,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = P
                     )
                     (typeconvn, resultdef = "LongInt", pos = (374,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (vecn, resultdef = "Byte", pos = (374,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Byte", pos = (374,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = XYZ
                           )
                           (ordconstn, resultdef = "LongInt", pos = (374,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )
                        )
                     )
                  )
                  (typeconvn, resultdef = "Double", pos = (374,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (addn, resultdef = "Extended", pos = (374,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (muln, resultdef = "Extended", pos = (374,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (inlinen, resultdef = "Extended", pos = (374,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (374,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (loadn, resultdef = "Double", pos = (374,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA
                                 )
                              )
                           )
                           (typeconvn, resultdef = "Extended", pos = (374,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (loadn, resultdef = "Double", pos = (374,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = RAD
                              )
                           )
                        )
                        (typeconvn, resultdef = "Extended", pos = (374,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                           (loadn, resultdef = "Double", pos = (374,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CX
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (375,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (375,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (375,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (375,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = P
                     )
                     (typeconvn, resultdef = "LongInt", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (vecn, resultdef = "Byte", pos = (375,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Byte", pos = (375,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = XYZ
                           )
                           (ordconstn, resultdef = "LongInt", pos = (375,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 1
                           )
                        )
                     )
                  )
                  (typeconvn, resultdef = "Double", pos = (375,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (addn, resultdef = "Extended", pos = (375,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (muln, resultdef = "Extended", pos = (375,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (inlinen, resultdef = "Extended", pos = (375,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "Extended", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                                 (loadn, resultdef = "Double", pos = (375,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = THETA
                                 )
                              )
                           )
                           (typeconvn, resultdef = "Extended", pos = (375,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                              (loadn, resultdef = "Double", pos = (375,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = RAD
                              )
                           )
                        )
                        (typeconvn, resultdef = "Extended", pos = (375,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                           (loadn, resultdef = "Double", pos = (375,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CY
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (376,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (376,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Double", pos = (376,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..2] Of Double", pos = (376,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = P
                     )
                     (typeconvn, resultdef = "LongInt", pos = (376,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (vecn, resultdef = "Byte", pos = (376,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Byte", pos = (376,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = XYZ
                           )
                           (ordconstn, resultdef = "LongInt", pos = (376,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 2
                           )
                        )
                     )
                  )
                  (calln, resultdef = "Double", pos = (376,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = local inter(< Pointer>, Double, Double):Double
                     left =
                     (callparan, resultdef = "Double", pos = (376,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (376,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (376,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = N
                           )
                           (typeconvn, resultdef = "LongInt", pos = (376,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (376,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (376,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (376,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 2
                                 )
                              )
                           )
                        )

                     )
                     (callparan, resultdef = "Double", pos = (376,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (vecn, resultdef = "Double", pos = (376,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Array[0..2] Of Double", pos = (376,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = O
                           )
                           (typeconvn, resultdef = "LongInt", pos = (376,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                              (vecn, resultdef = "Byte", pos = (376,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Array[0..2] Of Byte", pos = (376,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = XYZ
                                 )
                                 (ordconstn, resultdef = "LongInt", pos = (376,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 2
                                 )
                              )
                           )
                        )

                     )
                     (callparan, resultdef = "^untyped", pos = (376,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = "^untyped", pos = (376,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (383,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "Boolean", pos = (383,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
                  left =
                  (callparan, resultdef = "Double", pos = (383,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (383,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (383,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (383,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (383,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (383,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (383,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (383,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (383,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = P
                        )
                        (ordconstn, resultdef = "LongInt", pos = (383,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )
                     )

                  )
                  (callparan, resultdef = "Double", pos = (383,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (383,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (383,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = P
                        )
                        (ordconstn, resultdef = "LongInt", pos = (383,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 1
                        )
                     )

                  )
                  (callparan, resultdef = "Double", pos = (383,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Double", pos = (383,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..2] Of Double", pos = (383,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = P
                        )
                        (ordconstn, resultdef = "LongInt", pos = (383,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )

                  )
                  (callparan, resultdef = "Byte", pos = (383,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "Byte", pos = (383,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 3
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (385,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (384,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Boolean", pos = (384,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = DOABORTBUILDLIST
                  )
                  (breakn, resultdef = "untyped", pos = (385,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )
                  nil
                  nil
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (390,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0E7A0
            )

         )
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0E7A0
               )
               (typeconvn, resultdef = "^untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
               left =
               (callparan, resultdef = "Boolean", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )

               )
               (callparan, resultdef = "LongInt", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 11
                  )

               )
               (callparan, resultdef = "Open Array Of Char", pos = (390,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "Constant String", pos = (390,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (callparan, resultdef = "Text", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E7A0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E7A0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (390,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E7A0
            )

         )
      )

   )
)

*******************************************************************************
setrotationxy(LongInt, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (395,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (397,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0E8C0
            )

         )
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0E8C0
               )
               (typeconvn, resultdef = "^untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
               left =
               (callparan, resultdef = "Boolean", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )

               )
               (callparan, resultdef = "LongInt", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 12
                  )

               )
               (callparan, resultdef = "Open Array Of Char", pos = (397,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "Constant String", pos = (397,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (callparan, resultdef = "Text", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E8C0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E8C0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (397,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E8C0
            )

         )
      )

   )
)

*******************************************************************************
setoriginoffsets(LongInt, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (402,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (404,62), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0E920
            )

         )
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0E920
               )
               (typeconvn, resultdef = "^untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (404,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (404,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (404,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (404,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (404,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (404,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (404,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (404,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (404,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (404,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (404,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (404,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (404,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (404,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (404,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = Z
                                       )
                                       nil
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (404,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (404,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E920
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E920
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (404,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E920
            )

         )
      )

   )
)

*******************************************************************************
settraverserate(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (409,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   nil
)

*******************************************************************************
straigthtraverse(LongInt, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "Boolean", pos = (413,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (415,71), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EAA0
            )

         )
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EAA0
               )
               (typeconvn, resultdef = "^untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (415,70), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (415,70), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (415,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (415,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (415,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (415,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (415,69), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (415,69), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (415,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (415,64), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (415,63), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (415,66), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (415,65), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (415,68), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (415,67), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = Z
                                       )
                                       nil
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (415,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (415,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EAA0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EAA0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (415,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EAA0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (417,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "Boolean", pos = (417,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
         left =
         (callparan, resultdef = "Double", pos = (417,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = C
            )

         )
         (callparan, resultdef = "Double", pos = (417,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = B
            )

         )
         (callparan, resultdef = "Double", pos = (417,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = A
            )

         )
         (callparan, resultdef = "Double", pos = (417,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )

         )
         (callparan, resultdef = "Double", pos = (417,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = "Double", pos = (417,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (417,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )

         )
         (callparan, resultdef = "Byte", pos = (417,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "Byte", pos = (417,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )

         )
      )

   )
)

*******************************************************************************
setUnits_inch;CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (421,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (423,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EB00
            )

         )
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EB00
               )
               (typeconvn, resultdef = "^untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
               left =
               (callparan, resultdef = "Boolean", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )

               )
               (callparan, resultdef = "LongInt", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 12
                  )

               )
               (callparan, resultdef = "Open Array Of Char", pos = (423,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "Constant String", pos = (423,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (callparan, resultdef = "Text", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EB00
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EB00
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (423,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EB00
            )

         )
      )

   )
)

*******************************************************************************
setUnits_mm;CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (428,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (430,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EB60
            )

         )
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EB60
               )
               (typeconvn, resultdef = "^untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
               left =
               (callparan, resultdef = "Boolean", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 1
                  )

               )
               (callparan, resultdef = "LongInt", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 10
                  )

               )
               (callparan, resultdef = "Open Array Of Char", pos = (430,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "Constant String", pos = (430,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (callparan, resultdef = "Text", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EB60
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EB60
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (430,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EB60
            )

         )
      )

   )
)

*******************************************************************************
selectplane(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (435,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (437,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EC80
            )

         )
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EC80
               )
               (typeconvn, resultdef = "^untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (437,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (437,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (437,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (437,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (437,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (437,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (437,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (437,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (437,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = IN_PLANE
                              )
                              nil
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (437,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (437,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EC80
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EC80
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (437,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EC80
            )

         )
      )

   )
)

*******************************************************************************
splinefeed2(LongInt, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (443,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (445,74), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EDA0
            )

         )
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EDA0
               )
               (typeconvn, resultdef = "^untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (445,73), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (445,73), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (445,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (445,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (445,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (445,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 4
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (445,72), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (445,72), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (445,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (445,62), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (445,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X1
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (445,65), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (445,63), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y1
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (445,68), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (445,66), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = X2
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (445,71), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (loadn, resultdef = "Double", pos = (445,69), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = Y2
                                          )
                                          nil
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (445,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (445,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EDA0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EDA0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (445,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EDA0
            )

         )
      )

   )
)

*******************************************************************************
splinefeed3(LongInt, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (450,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (452,85), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EEC0
            )

         )
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EEC0
               )
               (typeconvn, resultdef = "^untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (452,84), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (452,84), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (452,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (452,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (452,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (452,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 6
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (452,83), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (452,83), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (452,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (452,67), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (452,65), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X1
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (452,70), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (452,68), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y1
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (452,73), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (452,71), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = X2
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (452,76), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (loadn, resultdef = "Double", pos = (452,74), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = Y2
                                          )
                                          (arrayconstructn, resultdef = <nil>, pos = (452,79), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             (loadn, resultdef = "Double", pos = (452,77), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = X3
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (452,82), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (loadn, resultdef = "Double", pos = (452,80), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = Y3
                                                )
                                                nil
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (452,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (452,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EEC0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EEC0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (452,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EEC0
            )

         )
      )

   )
)

*******************************************************************************
arcfeed(LongInt, Double, Double, Double, Double, LongInt, Double, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (461,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (463,90), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0EFE0
            )

         )
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0EFE0
               )
               (typeconvn, resultdef = "^untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (463,89), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (463,89), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (463,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (463,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (463,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (463,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 6
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (463,88), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (463,88), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (463,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (463,65), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (463,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = END1
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (463,70), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (463,66), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = END2
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (463,75), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (463,71), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = END3
                                       )
                                       (arrayconstructn, resultdef = <nil>, pos = (463,79), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (loadn, resultdef = "Double", pos = (463,76), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             nil
                                             symbol = AX1
                                          )
                                          (arrayconstructn, resultdef = <nil>, pos = (463,83), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             (loadn, resultdef = "Double", pos = (463,80), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                nil
                                                symbol = AX2
                                             )
                                             (arrayconstructn, resultdef = <nil>, pos = (463,87), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (loadn, resultdef = "LongInt", pos = (463,84), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = ROT
                                                )
                                                nil
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (463,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (463,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EFE0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0EFE0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (463,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0EFE0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (466,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F160
            )

         )
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F160
               )
               (typeconvn, resultdef = "^untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (466,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (466,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (466,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (466,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (466,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (466,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 2
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (466,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (466,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (466,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = PX
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (466,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (466,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = PY
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (466,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (466,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = PZ
                                    )
                                    nil
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (466,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F160
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F160
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (466,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F160
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (468,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (468,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = ArcToSeg1(Double, Double, Double, Double, LongInt, Double, Double, Double, Double, Double, Double, Double)
         left =
         (callparan, resultdef = "Double", pos = (468,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = W
            )

         )
         (callparan, resultdef = "Double", pos = (468,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = V
            )

         )
         (callparan, resultdef = "Double", pos = (468,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = U
            )

         )
         (callparan, resultdef = "Double", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = C
            )

         )
         (callparan, resultdef = "Double", pos = (468,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = B
            )

         )
         (callparan, resultdef = "Double", pos = (468,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = A
            )

         )
         (callparan, resultdef = "Double", pos = (468,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = END3
            )

         )
         (callparan, resultdef = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (468,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = ROT
            )

         )
         (callparan, resultdef = "Double", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = AX2
            )

         )
         (callparan, resultdef = "Double", pos = (468,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = AX1
            )

         )
         (callparan, resultdef = "Double", pos = (468,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = END2
            )

         )
         (callparan, resultdef = "Double", pos = (468,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (468,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = END1
            )

         )
      )

   )
)

*******************************************************************************
straightfeed(LongInt, Double, Double, Double, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "Boolean", pos = (473,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (475,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F1C0
            )

         )
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F1C0
               )
               (typeconvn, resultdef = "^untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (475,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (475,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (475,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (475,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (475,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (475,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (475,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (475,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (475,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (475,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (475,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (475,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (475,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (475,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (475,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = Z
                                       )
                                       nil
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (475,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (475,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F1C0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F1C0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (475,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F1C0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (477,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "Boolean", pos = (477,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = AddLineItem(Byte, Double, Double, Double, Double, Double, Double):Boolean
         left =
         (callparan, resultdef = "Double", pos = (477,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = C
            )

         )
         (callparan, resultdef = "Double", pos = (477,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = B
            )

         )
         (callparan, resultdef = "Double", pos = (477,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = A
            )

         )
         (callparan, resultdef = "Double", pos = (477,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Z
            )

         )
         (callparan, resultdef = "Double", pos = (477,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = Y
            )

         )
         (callparan, resultdef = "Double", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (477,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = X
            )

         )
         (callparan, resultdef = "Byte", pos = (477,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "Byte", pos = (477,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 2
            )

         )
      )

   )
)

*******************************************************************************
changetoolnumber(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (481,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (483,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F340
            )

         )
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F340
               )
               (typeconvn, resultdef = "^untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (483,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (483,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (483,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (483,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (483,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (483,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (483,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (483,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (483,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = SLOT
                              )
                              nil
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (483,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (483,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F340
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F340
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (483,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F340
            )

         )
      )

   )
)

*******************************************************************************
changetool(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (488,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (490,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F460
            )

         )
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F460
               )
               (typeconvn, resultdef = "^untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (490,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (490,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (490,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (490,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (490,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (490,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (490,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (490,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (490,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = SLOT
                              )
                              nil
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (490,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (490,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F460
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F460
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (490,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F460
            )

         )
      )

   )
)

*******************************************************************************
selecttool(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (495,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (497,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F580
            )

         )
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F580
               )
               (typeconvn, resultdef = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (497,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (497,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (497,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (497,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (497,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (497,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (497,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (497,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (497,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = SLOT
                              )
                              nil
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (497,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (497,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F580
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F580
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (497,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F580
            )

         )
      )

   )
)

*******************************************************************************
straightprobe(LongInt, Double, Double, Double, Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (502,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (504,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F6A0
            )

         )
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F6A0
               )
               (typeconvn, resultdef = "^untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (504,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (504,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (504,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (504,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (504,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (504,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (504,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (504,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (504,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINE
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (504,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (504,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = X
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (504,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (504,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Y
                                    )
                                    (arrayconstructn, resultdef = <nil>, pos = (504,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (loadn, resultdef = "Double", pos = (504,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          nil
                                          symbol = Z
                                       )
                                       nil
                                    )
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (504,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (504,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F6A0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F6A0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (504,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F6A0
            )

         )
      )

   )
)

*******************************************************************************
rigidtap(Double, Double, Double);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (509,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (511,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F7C0
            )

         )
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F7C0
               )
               (typeconvn, resultdef = "^untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (511,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (511,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (511,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (511,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (511,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (511,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 2
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (511,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (511,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (511,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = X
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (511,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (511,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = Y
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (511,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (511,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = Z
                                    )
                                    nil
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (511,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (511,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F7C0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F7C0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (511,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F7C0
            )

         )
      )

   )
)

*******************************************************************************
selectpocket(LongInt);CDecl
*******************************************************************************
(blockn, resultdef = "untyped", pos = (516,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (518,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F8E0
            )

         )
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F8E0
               )
               (typeconvn, resultdef = "^untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (518,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (518,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (518,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (518,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (518,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (518,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Array Of Const", pos = (518,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of LongInt", pos = (518,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "LongInt", pos = (518,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = POCKET
                              )
                              nil
                           )

                        )
                        (callparan, resultdef = "AnsiString", pos = (518,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "AnsiString", pos = (518,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F8E0
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F8E0
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (518,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F8E0
            )

         )
      )

   )
)

*******************************************************************************
$SIM_init;Register
*******************************************************************************
nil

*******************************************************************************
GetError(LongInt):AnsiString
*******************************************************************************
(blockn, resultdef = "untyped", pos = (39,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (40,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (40,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (vecn, resultdef = "Char", pos = (40,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Array[0..255] Of Char", pos = (40,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = BUFFER
            )
            (ordconstn, resultdef = "LongInt", pos = (40,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (ordconstn, resultdef = "Char", pos = (40,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 0
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (41,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (41,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "AnsiString", pos = (41,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = S
         )
         (stringconstn, resultdef = "AnsiString", pos = (41,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (42,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (42,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = interp_errortext(LongInt, PChar, LongInt);CDecl
         left =
         (callparan, resultdef = "LongInt", pos = (42,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "LongInt", pos = (42,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 255
            )

         )
         (callparan, resultdef = "^Char", pos = (42,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "^Char", pos = (42,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_array_2_pointer
               (loadn, resultdef = "Array[0..255] Of Char", pos = (42,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = BUFFER
               )
            )

         )
         (callparan, resultdef = "LongInt", pos = (42,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (42,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = CODE
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (50,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (43,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (43,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (vecn, resultdef = "Char", pos = (43,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Array[0..255] Of Char", pos = (43,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = BUFFER
               )
               (ordconstn, resultdef = "LongInt", pos = (43,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 0
               )
            )
            (ordconstn, resultdef = "Char", pos = (43,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (44,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (45,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (45,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "AnsiString", pos = (45,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = S
                  )
                  (addn, resultdef = "AnsiString", pos = (45,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (addn, resultdef = "AnsiString", pos = (45,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "AnsiString", pos = (45,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = S
                        )
                        (calln, resultdef = "AnsiString", pos = (45,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = $fpc_pchar_to_ansistr(const PChar):AnsiString
                           left =
                           (callparan, resultdef = "^Char", pos = (45,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "^Char", pos = (45,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_array_2_pointer
                                 (loadn, resultdef = "Array[0..255] Of Char", pos = (45,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = BUFFER
                                 )
                              )

                           )
                        )
                     )
                     (stringconstn, resultdef = "AnsiString", pos = (45,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (46,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (46,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (vecn, resultdef = "Char", pos = (46,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Array[0..255] Of Char", pos = (46,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = BUFFER
                     )
                     (ordconstn, resultdef = "LongInt", pos = (46,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (ordconstn, resultdef = "Char", pos = (46,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (47,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (47,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = interp_line_text(PChar, LongInt);CDecl
                  left =
                  (callparan, resultdef = "LongInt", pos = (47,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "LongInt", pos = (47,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 255
                     )

                  )
                  (callparan, resultdef = "^Char", pos = (47,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "^Char", pos = (47,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_array_2_pointer
                        (loadn, resultdef = "Array[0..255] Of Char", pos = (47,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = BUFFER
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (49,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (48,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (unequaln, resultdef = "Boolean", pos = (48,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (vecn, resultdef = "Char", pos = (48,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Array[0..255] Of Char", pos = (48,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = BUFFER
                        )
                        (ordconstn, resultdef = "LongInt", pos = (48,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (ordconstn, resultdef = "Char", pos = (48,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (assignn, resultdef = "untyped", pos = (49,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "AnsiString", pos = (49,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = S
                     )
                     (addn, resultdef = "AnsiString", pos = (49,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "AnsiString", pos = (49,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = S
                        )
                        (calln, resultdef = "AnsiString", pos = (49,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = $fpc_pchar_to_ansistr(const PChar):AnsiString
                           left =
                           (callparan, resultdef = "^Char", pos = (49,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (typeconvn, resultdef = "^Char", pos = (49,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_array_2_pointer
                                 (loadn, resultdef = "Array[0..255] Of Char", pos = (49,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = BUFFER
                                 )
                              )

                           )
                        )
                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (51,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (51,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (typeconvn, resultdef = "AnsiString", pos = (51,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
            (loadn, resultdef = "AnsiString", pos = (51,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = result
            )
         )
         (loadn, resultdef = "AnsiString", pos = (51,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = S
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (53,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (53,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (53,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "AnsiString", pos = (53,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = S
            )
            (stringconstn, resultdef = "AnsiString", pos = (53,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "^untyped", tempinfo = $B4B0E500
               )

            )
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "^untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "^untyped", tempinfo = $B4B0E500
                  )
                  (typeconvn, resultdef = "^untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (calln, resultdef = "^Text", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_get_output:^Text
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
                  left =
                  (callparan, resultdef = "AnsiString", pos = (53,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "AnsiString", pos = (53,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = S
                     )

                  )
                  (callparan, resultdef = "Text", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Text", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                        (derefn, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (temprefn, resultdef = "^untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              temptypedef = "^untyped", tempinfo = $B4B0E500
                           )
                        )
                     )

                  )
                  (callparan, resultdef = "LongInt", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "LongInt", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = $fpc_writeln_end(var Text)
                  left =
                  (callparan, resultdef = "Text", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Text", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                        (derefn, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (temprefn, resultdef = "^untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              temptypedef = "^untyped", tempinfo = $B4B0E500
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (53,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E500
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
ParseFile(const PChar):LongInt
*******************************************************************************
(blockn, resultdef = "untyped", pos = (60,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (61,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (61,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (typeconvn, resultdef = "LongInt", pos = (61,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
            (loadn, resultdef = "LongInt", pos = (61,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = result
            )
         )
         (ordconstn, resultdef = "LongInt", pos = (61,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = -1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (65,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (62,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (notn, resultdef = "Boolean", pos = (62,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (inlinen, resultdef = "Boolean", pos = (62,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (callparan, resultdef = "TList", pos = (62,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TList", pos = (62,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )

               )
            )
         )
         (assignn, resultdef = "untyped", pos = (63,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TList", pos = (63,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LINEITEMS
            )
            (calln, resultdef = "TList", pos = (63,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = constructor TList.Create(< TList>,< Pointer>)
               methodpointer =
               (loadvmtaddrn, resultdef = "Class Of TList", pos = (63,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typen, resultdef = "TList", pos = (63,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )
               )
               left =
               (callparan, resultdef = "Class Of TList", pos = (64,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadvmtaddrn, resultdef = "Class Of TList", pos = (64,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typen, resultdef = "TList", pos = (63,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                  )

               )
               (callparan, resultdef = "^untyped", pos = (64,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (pointerconstn, resultdef = "^untyped", pos = (64,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
            )
         )
         (calln, resultdef = "untyped", pos = (65,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = TList.Clear(< TList>)
            methodpointer =
            (loadn, resultdef = "TList", pos = (65,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LINEITEMS
            )
            left =
            (callparan, resultdef = "TList", pos = (65,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "TList", pos = (65,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LINEITEMS
               )

            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (72,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (66,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (equaln, resultdef = "Boolean", pos = (66,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "^Char", pos = (66,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = AFILENAME
            )
            (niln, resultdef = "^Char", pos = (66,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (67,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (69,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (blockn, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempcreaten, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        size = 4, temptypedef = "^untyped", tempinfo = $B4B0E3E0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (assignn, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0E3E0
                        )
                        (typeconvn, resultdef = "^untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                           (calln, resultdef = "^Text", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = $fpc_get_output:^Text
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
                        left =
                        (callparan, resultdef = "Boolean", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "Boolean", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 1
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 16
                           )

                        )
                        (callparan, resultdef = "Open Array Of Char", pos = (69,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "Constant String", pos = (69,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                        (callparan, resultdef = "Text", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4B0E3E0
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_writeln_end(var Text)
                        left =
                        (callparan, resultdef = "Text", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4B0E3E0
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempdeleten, resultdef = "untyped", pos = (69,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0E3E0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (71,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (exitn, resultdef = "untyped", pos = (71,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (79,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (73,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (notn, resultdef = "Boolean", pos = (73,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (inlinen, resultdef = "Boolean", pos = (73,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (callparan, resultdef = "TList", pos = (73,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TList", pos = (73,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )

               )
            )
         )
         (blockn, resultdef = "untyped", pos = (74,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (76,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (blockn, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempcreaten, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        size = 4, temptypedef = "^untyped", tempinfo = $B4B0F820
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (assignn, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F820
                        )
                        (typeconvn, resultdef = "^untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                           (calln, resultdef = "^Text", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = $fpc_get_output:^Text
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
                        left =
                        (callparan, resultdef = "Boolean", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "Boolean", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 1
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 25
                           )

                        )
                        (callparan, resultdef = "Open Array Of Char", pos = (76,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (stringconstn, resultdef = "Constant String", pos = (76,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           )

                        )
                        (callparan, resultdef = "Text", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4B0F820
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_writeln_end(var Text)
                        left =
                        (callparan, resultdef = "Text", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4B0F820
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempdeleten, resultdef = "untyped", pos = (76,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F820
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (78,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (exitn, resultdef = "untyped", pos = (78,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (80,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "LongInt", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = STATUS
         )
         (calln, resultdef = "LongInt", pos = (80,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = interp_init:LongInt;CDecl
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (86,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (81,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (81,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = STATUS
            )
            (ordconstn, resultdef = "LongInt", pos = (81,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (82,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (83,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (83,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "AnsiString", pos = (83,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LASTERROR
                  )
                  (calln, resultdef = "AnsiString", pos = (83,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = GetError(LongInt):AnsiString
                     left =
                     (callparan, resultdef = "LongInt", pos = (83,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "LongInt", pos = (83,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = STATUS
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (84,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (84,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "LongInt", pos = (84,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (loadn, resultdef = "LongInt", pos = (84,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = result
                     )
                  )
                  (loadn, resultdef = "LongInt", pos = (84,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STATUS
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (85,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (exitn, resultdef = "untyped", pos = (85,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (87,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (87,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "LongInt", pos = (87,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = STATUS
         )
         (calln, resultdef = "LongInt", pos = (87,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = interp_open(const PChar):LongInt;CDecl
            left =
            (callparan, resultdef = "^Char", pos = (87,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "^Char", pos = (87,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = AFILENAME
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (93,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (88,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (88,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (88,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = STATUS
            )
            (ordconstn, resultdef = "LongInt", pos = (88,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (89,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (90,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (90,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "AnsiString", pos = (90,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LASTERROR
                  )
                  (calln, resultdef = "AnsiString", pos = (90,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = GetError(LongInt):AnsiString
                     left =
                     (callparan, resultdef = "LongInt", pos = (90,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "LongInt", pos = (90,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = STATUS
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (91,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (91,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "LongInt", pos = (91,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (loadn, resultdef = "LongInt", pos = (91,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = result
                     )
                  )
                  (loadn, resultdef = "LongInt", pos = (91,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STATUS
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (92,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (exitn, resultdef = "untyped", pos = (92,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (99,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (whilerepeatn, resultdef = "untyped", pos = (94,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (equaln, resultdef = "Boolean", pos = (94,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (94,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = STATUS
            )
            (ordconstn, resultdef = "LongInt", pos = (94,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (blockn, resultdef = "untyped", pos = (95,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (96,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (96,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "LongInt", pos = (96,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STATUS
                  )
                  (calln, resultdef = "LongInt", pos = (96,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = interp_read(const PChar):LongInt;CDecl
                     left =
                     (callparan, resultdef = "^Char", pos = (96,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (niln, resultdef = "^Char", pos = (96,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (98,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (97,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (equaln, resultdef = "Boolean", pos = (97,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (97,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STATUS
                     )
                     (ordconstn, resultdef = "LongInt", pos = (97,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (assignn, resultdef = "untyped", pos = (98,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "LongInt", pos = (98,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = STATUS
                     )
                     (calln, resultdef = "LongInt", pos = (98,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = interp_execute:LongInt;CDecl
                     )
                  )
                  nil
                  nil
               )

            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (101,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (100,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (unequaln, resultdef = "Boolean", pos = (100,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "LongInt", pos = (100,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = STATUS
            )
            (ordconstn, resultdef = "LongInt", pos = (100,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (assignn, resultdef = "untyped", pos = (101,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "AnsiString", pos = (101,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LASTERROR
            )
            (calln, resultdef = "AnsiString", pos = (101,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = GetError(LongInt):AnsiString
               left =
               (callparan, resultdef = "LongInt", pos = (101,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "LongInt", pos = (101,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = STATUS
                  )

               )
            )
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (102,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "LongInt", pos = (102,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = interp_close:LongInt;CDecl
      )

   )
   (statementn, resultdef = <nil>, pos = (104,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (blockn, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (nothingn, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempcreaten, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               size = 4, temptypedef = "^untyped", tempinfo = $B4B0F760
            )

         )
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (assignn, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "^untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "^untyped", tempinfo = $B4B0F760
               )
               (typeconvn, resultdef = "^untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                  (calln, resultdef = "^Text", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = $fpc_get_output:^Text
                  )
               )
            )

         )
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
               left =
               (callparan, resultdef = "AnsiString", pos = (104,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (addn, resultdef = "AnsiString", pos = (104,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (stringconstn, resultdef = "AnsiString", pos = (104,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                     (calln, resultdef = "AnsiString", pos = (104,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = IntToStr(LongInt):AnsiString
                        left =
                        (callparan, resultdef = "LongInt", pos = (104,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (calln, resultdef = "LongInt", pos = (104,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = TList.GetCount(< TList>):LongInt
                              methodpointer =
                              (loadn, resultdef = "TList", pos = (104,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LINEITEMS
                              )
                              left =
                              (callparan, resultdef = "TList", pos = (104,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "TList", pos = (104,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = LINEITEMS
                                 )

                              )
                           )

                        )
                     )
                  )

               )
               (callparan, resultdef = "Text", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F760
                        )
                     )
                  )

               )
               (callparan, resultdef = "LongInt", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = $fpc_writeln_end(var Text)
               left =
               (callparan, resultdef = "Text", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Text", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (derefn, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4B0F760
                        )
                     )
                  )

               )
            )

         )
         (statementn, resultdef = <nil>, pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (tempdeleten, resultdef = "untyped", pos = (104,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4B0F760
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (106,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (106,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (typeconvn, resultdef = "LongInt", pos = (106,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
            (loadn, resultdef = "LongInt", pos = (106,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = result
            )
         )
         (loadn, resultdef = "LongInt", pos = (106,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = STATUS
         )
      )

   )
)

*******************************************************************************
$LINECODE_init;Register
*******************************************************************************
nil

*******************************************************************************
TForm1.SetSoftLimits(Double, Double, Double, Double, Double, Double)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (77,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (78,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (78,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMINX
         )
         (loadn, resultdef = "Double", pos = (78,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = X1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (78,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (78,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (78,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMAXX
         )
         (loadn, resultdef = "Double", pos = (78,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = X2
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (79,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (79,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMINY
         )
         (loadn, resultdef = "Double", pos = (79,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = Y1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (79,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (79,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (79,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMAXY
         )
         (loadn, resultdef = "Double", pos = (79,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = Y2
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (80,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (80,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMINZ
         )
         (loadn, resultdef = "Double", pos = (80,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = Z1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (80,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (80,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (80,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LMAXZ
         )
         (loadn, resultdef = "Double", pos = (80,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = Z2
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (81,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (81,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LIMW
         )
         (subn, resultdef = "Double", pos = (81,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (81,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXX
            )
            (loadn, resultdef = "Double", pos = (81,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMINX
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (82,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (82,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LIMH
         )
         (subn, resultdef = "Double", pos = (82,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (82,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXY
            )
            (loadn, resultdef = "Double", pos = (82,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMINY
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (83,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (83,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (83,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LIMD
         )
         (subn, resultdef = "Double", pos = (83,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (83,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXZ
            )
            (loadn, resultdef = "Double", pos = (83,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMINZ
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (84,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (84,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (84,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = CENTERX
         )
         (subn, resultdef = "Double", pos = (84,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (84,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXX
            )
            (slashn, resultdef = "Double", pos = (84,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (84,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMW
               )
               (realconstn, resultdef = "Double", pos = (84,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  2.0000000000000000E+0000
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (85,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (85,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (85,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = CENTERY
         )
         (subn, resultdef = "Double", pos = (85,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (85,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXY
            )
            (slashn, resultdef = "Double", pos = (85,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (85,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMH
               )
               (realconstn, resultdef = "Double", pos = (85,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  2.0000000000000000E+0000
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (86,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (86,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (86,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = CENTERZ
         )
         (subn, resultdef = "Double", pos = (86,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (86,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LMAXZ
            )
            (slashn, resultdef = "Double", pos = (86,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (86,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMD
               )
               (realconstn, resultdef = "Double", pos = (86,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  2.0000000000000000E+0000
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (87,61), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (87,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (87,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (87,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LIMW
            )
            (loadn, resultdef = "Double", pos = (87,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LIMH
            )
         )
         (assignn, resultdef = "untyped", pos = (87,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (87,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = DIST
            )
            (muln, resultdef = "Double", pos = (87,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (87,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMH
               )
               (realconstn, resultdef = "Double", pos = (87,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  1.0000000000000000E+0001
               )
            )
         )
         (assignn, resultdef = "untyped", pos = (87,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (87,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = DIST
            )
            (muln, resultdef = "Double", pos = (87,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (87,52), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMW
               )
               (realconstn, resultdef = "Double", pos = (87,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  1.0000000000000000E+0001
               )
            )
         )
         nil
      )

   )
)

*******************************************************************************
TForm1.DrawLimits
*******************************************************************************
(blockn, resultdef = "untyped", pos = (93,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (95,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (95,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLENABLE
         )
         left =
         (callparan, resultdef = "DWord", pos = (95,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "DWord", pos = (95,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 2852
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (96,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (96,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongInt, Word);CDecl>", pos = (96,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLLINESTIPPLE
         )
         left =
         (callparan, resultdef = "Word", pos = (96,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "Word", pos = (96,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 21845
            )

         )
         (callparan, resultdef = "LongInt", pos = (96,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "LongInt", pos = (96,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 10
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (97,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (97,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLBEGIN
         )
         left =
         (callparan, resultdef = "DWord", pos = (97,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "DWord", pos = (97,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 3
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (98,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (98,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (98,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLCOLOR3F
         )
         left =
         (callparan, resultdef = "Single", pos = (98,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (98,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E-0001
            )

         )
         (callparan, resultdef = "Single", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (98,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E-0001
            )

         )
         (callparan, resultdef = "Single", pos = (98,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (98,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  7.0000000000000000E-0001
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (99,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (99,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (99,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (99,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (99,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (99,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (99,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (99,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (99,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (99,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (99,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (99,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (100,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (100,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (100,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (100,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (100,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (100,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (100,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (100,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (100,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (100,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (100,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (100,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (101,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (101,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (101,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (101,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (101,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (101,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (101,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (101,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (101,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (101,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (101,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (101,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (102,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (102,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (102,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (102,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (102,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (102,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (102,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (102,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (102,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (102,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (102,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (102,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (103,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (103,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (103,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (103,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (103,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (103,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (103,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (103,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (103,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (103,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (103,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (103,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (104,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (104,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (104,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (104,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (104,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (104,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (104,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (104,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (104,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (104,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (104,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (104,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (105,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (105,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (105,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (105,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (105,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (105,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (105,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (105,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (105,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (105,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (105,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (105,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (106,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (106,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (106,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (106,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (106,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (106,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (106,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (106,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (106,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (106,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (107,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (107,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (107,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (107,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (107,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (107,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (107,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (107,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (107,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (107,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (107,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (107,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (108,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (108,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (108,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (108,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (108,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (108,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (108,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (108,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (108,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (108,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (108,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (108,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (109,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (109,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (109,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (109,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (109,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (109,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (109,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (109,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (109,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (109,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (109,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (109,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (110,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (110,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (110,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLEND
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (111,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (111,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLBEGIN
         )
         left =
         (callparan, resultdef = "DWord", pos = (111,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "DWord", pos = (111,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (112,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (112,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (112,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (112,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (112,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (112,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (112,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (112,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (112,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (112,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (112,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (112,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (113,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (113,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (113,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (113,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (113,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (113,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (113,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (113,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (113,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (113,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (113,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (113,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (114,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (114,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (114,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (114,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (114,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (114,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (114,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (114,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (114,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (114,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (114,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (114,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (115,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (115,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (115,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (115,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (115,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (115,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (115,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (115,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (115,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (115,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (115,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (115,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (116,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (116,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (116,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (116,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (116,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (116,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (116,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (116,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (116,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (116,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (116,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (116,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (117,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (117,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (117,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLVERTEX3F
         )
         left =
         (callparan, resultdef = "Single", pos = (117,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (117,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (117,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINZ
               )
            )

         )
         (callparan, resultdef = "Single", pos = (117,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (117,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (117,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMINY
               )
            )

         )
         (callparan, resultdef = "Single", pos = (117,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Single", pos = (117,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
               (loadn, resultdef = "Double", pos = (117,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LMAXX
               )
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (118,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (118,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (118,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLEND
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (119,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (119,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (119,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLDISABLE
         )
         left =
         (callparan, resultdef = "DWord", pos = (119,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "DWord", pos = (119,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 2852
            )

         )
      )

   )
)

*******************************************************************************
TForm1.DrawList
*******************************************************************************
(blockn, resultdef = "untyped", pos = (126,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (127,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (127,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (notn, resultdef = "Boolean", pos = (127,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (inlinen, resultdef = "Boolean", pos = (127,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (callparan, resultdef = "TList", pos = (127,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TList", pos = (127,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )

               )
            )
         )
         (exitn, resultdef = "untyped", pos = (127,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (128,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (128,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (128,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "LongInt", pos = (128,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = TList.GetCount(< TList>):LongInt
               methodpointer =
               (loadn, resultdef = "TList", pos = (128,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LINEITEMS
               )
               left =
               (callparan, resultdef = "TList", pos = (128,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TList", pos = (128,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )

               )
            )
            (ordconstn, resultdef = "LongInt", pos = (128,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         (exitn, resultdef = "untyped", pos = (128,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (130,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (130,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (130,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLBEGIN
         )
         left =
         (callparan, resultdef = "DWord", pos = (130,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "DWord", pos = (130,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (148,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (forn, resultdef = "untyped", pos = (131,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "LongInt", pos = (131,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = I
         )
         (ordconstn, resultdef = "LongInt", pos = (131,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 0
         )
         (subn, resultdef = "LongInt", pos = (131,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "LongInt", pos = (131,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = TList.GetCount(< TList>):LongInt
               methodpointer =
               (loadn, resultdef = "TList", pos = (131,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LINEITEMS
               )
               left =
               (callparan, resultdef = "TList", pos = (131,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TList", pos = (131,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = LINEITEMS
                  )

               )
            )
            (ordconstn, resultdef = "LongInt", pos = (131,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 1
            )
         )
         (blockn, resultdef = "untyped", pos = (132,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (133,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (133,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "^TLineItem", pos = (133,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = P
                  )
                  (typeconvn, resultdef = "^TLineItem", pos = (133,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                     (calln, resultdef = "^untyped", pos = (133,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = TList.Get(< TList>, LongInt):^untyped
                        methodpointer =
                        (loadn, resultdef = "TList", pos = (133,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = LINEITEMS
                        )
                        left =
                        (callparan, resultdef = "LongInt", pos = (133,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "LongInt", pos = (133,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = I
                           )

                        )
                        (callparan, resultdef = "TList", pos = (133,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "TList", pos = (133,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = LINEITEMS
                           )

                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (135,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (134,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (equaln, resultdef = "Boolean", pos = (134,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "^Char", pos = (134,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                        (loadn, resultdef = "^TLineItem", pos = (134,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = P
                        )
                     )
                     (niln, resultdef = "^Char", pos = (134,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )
                  )
                  (breakn, resultdef = "untyped", pos = (135,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (142,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (136,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (equaln, resultdef = "Boolean", pos = (136,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "LongInt", pos = (136,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                        (subscriptn, resultdef = "Byte", pos = (136,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (derefn, resultdef = "<record type>", pos = (136,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "^TLineItem", pos = (136,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = P
                              )
                           )
                        )
                     )
                     (ordconstn, resultdef = "LongInt", pos = (136,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 2
                     )
                  )
                  (calln, resultdef = "untyped", pos = (137,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = <nil>
                     right =
                     (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (137,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = GLCOLOR3F
                     )
                     left =
                     (callparan, resultdef = "Single", pos = (137,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Single", pos = (137,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  1.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "Single", pos = (137,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Single", pos = (137,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  1.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "Single", pos = (137,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Single", pos = (137,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  1.0000000000000000E+0000
                        )

                     )
                  )
                  (ifn, resultdef = "untyped", pos = (139,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (equaln, resultdef = "Boolean", pos = (139,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (typeconvn, resultdef = "LongInt", pos = (139,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
                           (subscriptn, resultdef = "Byte", pos = (139,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (derefn, resultdef = "<record type>", pos = (139,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "^TLineItem", pos = (139,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = P
                                 )
                              )
                           )
                        )
                        (ordconstn, resultdef = "LongInt", pos = (139,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 3
                        )
                     )
                     (calln, resultdef = "untyped", pos = (140,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = <nil>
                        right =
                        (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (140,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = GLCOLOR3F
                        )
                        left =
                        (callparan, resultdef = "Single", pos = (140,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (140,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  1.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "Single", pos = (140,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (140,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  0.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "Single", pos = (140,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (140,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  1.0000000000000000E+0000
                           )

                        )
                     )
                     (calln, resultdef = "untyped", pos = (142,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = <nil>
                        right =
                        (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (142,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = GLCOLOR3F
                        )
                        left =
                        (callparan, resultdef = "Single", pos = (142,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (142,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  3.0000000000000000E-0001
                           )

                        )
                        (callparan, resultdef = "Single", pos = (142,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (142,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  2.0000000000000000E-0001
                           )

                        )
                        (callparan, resultdef = "Single", pos = (142,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Single", pos = (142,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  2.0000000000000000E-0001
                           )

                        )
                     )
                     nil
                  )
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (143,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (143,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (143,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (143,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (143,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OLDZ
                     )

                  )
                  (callparan, resultdef = "Single", pos = (143,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (143,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OLDY
                     )

                  )
                  (callparan, resultdef = "Single", pos = (143,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (143,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = OLDX
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (144,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (144,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (144,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (144,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (144,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (subscriptn, resultdef = "Double", pos = (144,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (derefn, resultdef = "<record type>", pos = (144,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "^TLineItem", pos = (144,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = P
                              )
                           )
                        )
                     )

                  )
                  (callparan, resultdef = "Single", pos = (144,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (144,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (subscriptn, resultdef = "Double", pos = (144,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (derefn, resultdef = "<record type>", pos = (144,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "^TLineItem", pos = (144,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = P
                              )
                           )
                        )
                     )

                  )
                  (callparan, resultdef = "Single", pos = (144,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (144,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (subscriptn, resultdef = "Double", pos = (144,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (derefn, resultdef = "<record type>", pos = (144,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "^TLineItem", pos = (144,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = P
                              )
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (145,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (145,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Single", pos = (145,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = OLDX
                  )
                  (typeconvn, resultdef = "Single", pos = (145,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subscriptn, resultdef = "Double", pos = (145,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (derefn, resultdef = "<record type>", pos = (145,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "^TLineItem", pos = (145,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = P
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (146,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (146,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Single", pos = (146,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = OLDY
                  )
                  (typeconvn, resultdef = "Single", pos = (146,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subscriptn, resultdef = "Double", pos = (146,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (derefn, resultdef = "<record type>", pos = (146,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "^TLineItem", pos = (146,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = P
                           )
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (147,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (147,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Single", pos = (147,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = OLDZ
                  )
                  (typeconvn, resultdef = "Single", pos = (147,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (subscriptn, resultdef = "Double", pos = (147,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (derefn, resultdef = "<record type>", pos = (147,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "^TLineItem", pos = (147,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = P
                           )
                        )
                     )
                  )
               )

            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (150,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (150,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (150,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLEND
         )
      )

   )
)

*******************************************************************************
ZoomLimits
*******************************************************************************
(blockn, resultdef = "untyped", pos = (155,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (156,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (156,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (ltn, resultdef = "Boolean", pos = (156,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (156,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LIMW
            )
            (loadn, resultdef = "Double", pos = (156,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LIMH
            )
         )
         (assignn, resultdef = "untyped", pos = (156,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (156,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = DIST
            )
            (muln, resultdef = "Double", pos = (156,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (156,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMH
               )
               (realconstn, resultdef = "Double", pos = (156,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  2.0000000000000000E+0000
               )
            )
         )
         (assignn, resultdef = "untyped", pos = (156,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Double", pos = (156,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = DIST
            )
            (muln, resultdef = "Double", pos = (156,56), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "Double", pos = (156,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LIMW
               )
               (realconstn, resultdef = "Double", pos = (156,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  2.0000000000000000E+0000
               )
            )
         )
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (157,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (157,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (157,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ROTY
         )
         (realconstn, resultdef = "Single", pos = (157,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (158,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (158,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (158,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ROTZ
         )
         (realconstn, resultdef = "Single", pos = (158,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (159,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (159,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (159,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ROTX
         )
         (realconstn, resultdef = "Single", pos = (159,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value =  0.0000000000000000E+0000
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (160,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (160,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (160,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PANX
         )
         (typeconvn, resultdef = "Single", pos = (160,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (loadn, resultdef = "Double", pos = (160,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = CENTERX
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (161,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (161,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PANY
         )
         (typeconvn, resultdef = "Single", pos = (161,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (loadn, resultdef = "Double", pos = (161,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = CENTERY
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (162,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (162,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = PANZ
         )
         (typeconvn, resultdef = "Single", pos = (162,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (loadn, resultdef = "Double", pos = (162,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = CENTERZ
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (163,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Boolean", pos = (163,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = AREAINITIALIZED
         )
         (ordconstn, resultdef = "Boolean", pos = (163,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 0
         )
      )

   )
)

*******************************************************************************
TForm1.BtnOpenClick(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (170,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (184,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (171,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (calln, resultdef = "Boolean", pos = (171,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = TFileDialog.Execute(< TFileDialog>):Boolean
            methodpointer =
            (temprefn, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenDialog", tempinfo = $B4989400
            )
            methodpointerinit =
            (blockn, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (nothingn, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (tempcreaten, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     size = 4, temptypedef = "TOpenDialog", tempinfo = $B4989400
                  )

               )
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (temprefn, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        temptypedef = "TOpenDialog", tempinfo = $B4989400
                     )
                     (subscriptn, resultdef = "TOpenDialog", pos = (171,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "TForm1", pos = (171,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )
            methodpointerdone =
            (blockn, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (nothingn, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (tempdeleten, resultdef = "untyped", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     release_to_normal: TRUE, temptypedef = "TOpenDialog", tempinfo = $B4989400
                  )

               )
               (statementn, resultdef = <nil>, pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenDialog", tempinfo = $B4989400
                  )

               )
            )
            left =
            (callparan, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenDialog", pos = (171,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenDialog", tempinfo = $B4989400
               )

            )
         )
         (blockn, resultdef = "untyped", pos = (172,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (173,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (173,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "AnsiString", pos = (173,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = S
                  )
                  (subscriptn, resultdef = "AnsiString", pos = (173,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (subscriptn, resultdef = "TOpenDialog", pos = (173,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "TForm1", pos = (173,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = self
                        )
                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (174,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (174,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (174,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MINX
                  )
                  (realconstn, resultdef = "Double", pos = (174,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (174,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (174,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (174,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MAXX
                  )
                  (realconstn, resultdef = "Double", pos = (174,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (175,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (175,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (175,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MINY
                  )
                  (realconstn, resultdef = "Double", pos = (175,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (175,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (175,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (175,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MAXY
                  )
                  (realconstn, resultdef = "Double", pos = (175,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (176,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (176,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (176,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MINZ
                  )
                  (realconstn, resultdef = "Double", pos = (176,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (176,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "Double", pos = (176,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = MAXZ
                  )
                  (realconstn, resultdef = "Double", pos = (176,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (177,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (177,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "LongInt", pos = (177,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = I
                  )
                  (calln, resultdef = "LongInt", pos = (177,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = ParseFile(const PChar):LongInt
                     left =
                     (callparan, resultdef = "^Char", pos = (177,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (typeconvn, resultdef = "^Char", pos = (177,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_ansistring_2_pchar
                           (loadn, resultdef = "AnsiString", pos = (177,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = S
                           )
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (178,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (blockn, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempcreaten, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        size = 4, temptypedef = "^untyped", tempinfo = $B49894C0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (assignn, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B49894C0
                        )
                        (typeconvn, resultdef = "^untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                           (calln, resultdef = "^Text", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = $fpc_get_output:^Text
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
                        left =
                        (callparan, resultdef = "AnsiString", pos = (178,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (addn, resultdef = "AnsiString", pos = (178,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (stringconstn, resultdef = "AnsiString", pos = (178,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              )
                              (calln, resultdef = "AnsiString", pos = (178,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 proc = IntToStr(LongInt):AnsiString
                                 left =
                                 (callparan, resultdef = "LongInt", pos = (178,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "LongInt", pos = (178,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = I
                                    )

                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "Text", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B49894C0
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_writeln_end(var Text)
                        left =
                        (callparan, resultdef = "Text", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B49894C0
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempdeleten, resultdef = "untyped", pos = (178,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B49894C0
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (179,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (179,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "AnsiString", pos = (179,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = S
                  )
                  (calln, resultdef = "AnsiString", pos = (179,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = GetError(LongInt):AnsiString
                     left =
                     (callparan, resultdef = "LongInt", pos = (179,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "LongInt", pos = (179,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = I
                        )

                     )
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (180,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (blockn, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempcreaten, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        size = 4, temptypedef = "^untyped", tempinfo = $B4989520
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (assignn, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "^untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "^untyped", tempinfo = $B4989520
                        )
                        (typeconvn, resultdef = "^untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                           (calln, resultdef = "^Text", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = $fpc_get_output:^Text
                           )
                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
                        left =
                        (callparan, resultdef = "AnsiString", pos = (180,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "AnsiString", pos = (180,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = S
                           )

                        )
                        (callparan, resultdef = "Text", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4989520
                                 )
                              )
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = $fpc_writeln_end(var Text)
                        left =
                        (callparan, resultdef = "Text", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (typeconvn, resultdef = "Text", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                              (derefn, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (temprefn, resultdef = "^untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    temptypedef = "^untyped", tempinfo = $B4989520
                                 )
                              )
                           )

                        )
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempdeleten, resultdef = "untyped", pos = (180,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4989520
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (181,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (181,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TForm1.SetSoftLimits(< TForm1>, Double, Double, Double, Double, Double, Double)
                  methodpointer =
                  (loadn, resultdef = "TForm1", pos = (181,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = "Double", pos = (181,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,50), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MAXZ
                     )

                  )
                  (callparan, resultdef = "Double", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MAXY
                     )

                  )
                  (callparan, resultdef = "Double", pos = (181,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MAXX
                     )

                  )
                  (callparan, resultdef = "Double", pos = (181,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MINZ
                     )

                  )
                  (callparan, resultdef = "Double", pos = (181,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MINY
                     )

                  )
                  (callparan, resultdef = "Double", pos = (181,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (181,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = MINX
                     )

                  )
                  (callparan, resultdef = "TForm1", pos = (181,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (181,51), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (182,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (182,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = ZoomLimits
               )

            )
            (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (183,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TWinControl.Invalidate(< TWinControl>)
                  methodpointer =
                  (temprefn, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989580
                  )
                  methodpointerinit =
                  (blockn, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (nothingn, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (tempcreaten, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989580
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (temprefn, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              temptypedef = "TOpenGLControl", tempinfo = $B4989580
                           )
                           (subscriptn, resultdef = "TOpenGLControl", pos = (183,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "TForm1", pos = (183,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
                  methodpointerdone =
                  (blockn, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (nothingn, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (tempdeleten, resultdef = "untyped", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989580
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "TOpenGLControl", tempinfo = $B4989580
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (temprefn, resultdef = "TOpenGLControl", pos = (183,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        temptypedef = "TOpenGLControl", tempinfo = $B4989580
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
TForm1.Button2Click(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (188,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (189,64), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TControl.SetText(< TControl>,const TTranslateString)
         methodpointer =
         (temprefn, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TLabel", tempinfo = $B4989520
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TLabel", tempinfo = $B4989520
               )

            )
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TLabel", tempinfo = $B4989520
                  )
                  (subscriptn, resultdef = "TLabel", pos = (189,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (189,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TLabel", tempinfo = $B4989520
               )

            )
            (statementn, resultdef = <nil>, pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TLabel", tempinfo = $B4989520
               )

            )
         )
         left =
         (callparan, resultdef = "AnsiString", pos = (189,64), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "AnsiString", pos = (189,64), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
               left =
               (callparan, resultdef = "LongInt", pos = (189,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (189,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 2
                  )

               )
               (callparan, resultdef = "Array Of Const", pos = (189,63), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (189,63), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (189,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = CENTERX
                     )
                     (arrayconstructn, resultdef = <nil>, pos = (189,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (189,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = CENTERY
                        )
                        (arrayconstructn, resultdef = <nil>, pos = (189,62), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (189,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CENTERZ
                           )
                           nil
                        )
                     )
                  )

               )
               (callparan, resultdef = "AnsiString", pos = (189,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "AnsiString", pos = (189,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
            )

         )
         (callparan, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TLabel", pos = (189,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TLabel", tempinfo = $B4989520
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (190,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (190,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TControl.SetText(< TControl>,const TTranslateString)
         methodpointer =
         (temprefn, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TLabel", tempinfo = $B4989640
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TLabel", tempinfo = $B4989640
               )

            )
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TLabel", tempinfo = $B4989640
                  )
                  (subscriptn, resultdef = "TLabel", pos = (190,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (190,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TLabel", tempinfo = $B4989640
               )

            )
            (statementn, resultdef = <nil>, pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TLabel", tempinfo = $B4989640
               )

            )
         )
         left =
         (callparan, resultdef = "AnsiString", pos = (190,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "AnsiString", pos = (190,55), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
               left =
               (callparan, resultdef = "LongInt", pos = (190,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (190,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 2
                  )

               )
               (callparan, resultdef = "Array Of Const", pos = (190,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (190,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (190,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = LIMW
                     )
                     (arrayconstructn, resultdef = <nil>, pos = (190,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (190,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = LIMH
                        )
                        (arrayconstructn, resultdef = <nil>, pos = (190,53), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (190,49), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = LIMD
                           )
                           nil
                        )
                     )
                  )

               )
               (callparan, resultdef = "AnsiString", pos = (190,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "AnsiString", pos = (190,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
            )

         )
         (callparan, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TLabel", pos = (190,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TLabel", tempinfo = $B4989640
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (191,85), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (191,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TControl.SetText(< TControl>,const TTranslateString)
         methodpointer =
         (temprefn, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TLabel", tempinfo = $B4989760
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TLabel", tempinfo = $B4989760
               )

            )
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TLabel", tempinfo = $B4989760
                  )
                  (subscriptn, resultdef = "TLabel", pos = (191,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (191,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TLabel", tempinfo = $B4989760
               )

            )
            (statementn, resultdef = <nil>, pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TLabel", tempinfo = $B4989760
               )

            )
         )
         left =
         (callparan, resultdef = "AnsiString", pos = (191,85), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "AnsiString", pos = (191,85), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = Format(const AnsiString,constArray Of Const,<const LongInt>):AnsiString
               left =
               (callparan, resultdef = "LongInt", pos = (191,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (191,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 5
                  )

               )
               (callparan, resultdef = "Array Of Const", pos = (191,84), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of Double", pos = (191,84), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (191,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = LMINX
                     )
                     (arrayconstructn, resultdef = <nil>, pos = (191,59), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "Double", pos = (191,54), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = LMAXX
                        )
                        (arrayconstructn, resultdef = <nil>, pos = (191,65), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (191,60), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = LMINY
                           )
                           (arrayconstructn, resultdef = <nil>, pos = (191,71), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "Double", pos = (191,66), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = LMAXY
                              )
                              (arrayconstructn, resultdef = <nil>, pos = (191,77), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (191,72), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = LMINZ
                                 )
                                 (arrayconstructn, resultdef = <nil>, pos = (191,83), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "Double", pos = (191,78), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = LMAXZ
                                    )
                                    nil
                                 )
                              )
                           )
                        )
                     )
                  )

               )
               (callparan, resultdef = "AnsiString", pos = (191,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "AnsiString", pos = (191,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
            )

         )
         (callparan, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TLabel", pos = (191,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TLabel", tempinfo = $B4989760
            )

         )
      )

   )
)

*******************************************************************************
TForm1.FormCreate(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (199,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (209,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (200,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (equaln, resultdef = "Boolean", pos = (200,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (calln, resultdef = "LongInt", pos = (200,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
               left =
               (callparan, resultdef = "LongInt", pos = (200,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (200,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
               (callparan, resultdef = "Double", pos = (200,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (realconstn, resultdef = "Double", pos = (200,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )

               )
               (callparan, resultdef = "Double", pos = (200,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (realconstn, resultdef = "Double", pos = (200,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )

               )
               (callparan, resultdef = "Double", pos = (200,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (realconstn, resultdef = "Double", pos = (200,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )

               )
               (callparan, resultdef = "Double", pos = (200,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (realconstn, resultdef = "Double", pos = (200,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  1.0000000000000000E-0001
                  )

               )
               (callparan, resultdef = "Double", pos = (200,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (realconstn, resultdef = "Double", pos = (200,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value =  0.0000000000000000E+0000
                  )

               )
               (callparan, resultdef = "LongInt", pos = (200,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (200,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
               (callparan, resultdef = "LongInt", pos = (200,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "LongInt", pos = (200,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
            )
            (ordconstn, resultdef = "LongInt", pos = (200,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )
         )
         (ifn, resultdef = "untyped", pos = (201,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (equaln, resultdef = "Boolean", pos = (201,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "LongInt", pos = (201,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
                  left =
                  (callparan, resultdef = "LongInt", pos = (201,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "LongInt", pos = (201,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )

                  )
                  (callparan, resultdef = "Double", pos = (201,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (201,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (201,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (201,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (201,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (201,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (201,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (201,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E-0001
                     )

                  )
                  (callparan, resultdef = "Double", pos = (201,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (201,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "LongInt", pos = (201,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "LongInt", pos = (201,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )

                  )
                  (callparan, resultdef = "LongInt", pos = (201,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "LongInt", pos = (201,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )

                  )
               )
               (ordconstn, resultdef = "LongInt", pos = (201,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 0
               )
            )
            (ifn, resultdef = "untyped", pos = (202,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (equaln, resultdef = "Boolean", pos = (202,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (calln, resultdef = "LongInt", pos = (202,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
                     left =
                     (callparan, resultdef = "LongInt", pos = (202,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ordconstn, resultdef = "LongInt", pos = (202,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )

                     )
                     (callparan, resultdef = "Double", pos = (202,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Double", pos = (202,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  0.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "Double", pos = (202,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Double", pos = (202,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  0.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "Double", pos = (202,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Double", pos = (202,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  0.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "Double", pos = (202,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Double", pos = (202,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  1.0000000000000000E-0001
                        )

                     )
                     (callparan, resultdef = "Double", pos = (202,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (realconstn, resultdef = "Double", pos = (202,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value =  0.0000000000000000E+0000
                        )

                     )
                     (callparan, resultdef = "LongInt", pos = (202,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ordconstn, resultdef = "LongInt", pos = (202,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )

                     )
                     (callparan, resultdef = "LongInt", pos = (202,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (ordconstn, resultdef = "LongInt", pos = (202,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 2
                        )

                     )
                  )
                  (ordconstn, resultdef = "LongInt", pos = (202,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )
               )
               (ifn, resultdef = "untyped", pos = (203,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (equaln, resultdef = "Boolean", pos = (203,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (calln, resultdef = "LongInt", pos = (203,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
                        left =
                        (callparan, resultdef = "LongInt", pos = (203,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (203,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )

                        )
                        (callparan, resultdef = "Double", pos = (203,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Double", pos = (203,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  0.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "Double", pos = (203,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Double", pos = (203,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  0.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "Double", pos = (203,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Double", pos = (203,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  0.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "Double", pos = (203,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Double", pos = (203,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  1.0000000000000000E-0001
                           )

                        )
                        (callparan, resultdef = "Double", pos = (203,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (realconstn, resultdef = "Double", pos = (203,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value =  0.0000000000000000E+0000
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (203,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                        (callparan, resultdef = "LongInt", pos = (203,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (ordconstn, resultdef = "LongInt", pos = (203,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 3
                           )

                        )
                     )
                     (ordconstn, resultdef = "LongInt", pos = (203,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 0
                     )
                  )
                  (ifn, resultdef = "untyped", pos = (204,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (equaln, resultdef = "Boolean", pos = (204,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "LongInt", pos = (204,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
                           left =
                           (callparan, resultdef = "LongInt", pos = (204,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "LongInt", pos = (204,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 0
                              )

                           )
                           (callparan, resultdef = "Double", pos = (204,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (204,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  0.0000000000000000E+0000
                              )

                           )
                           (callparan, resultdef = "Double", pos = (204,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (204,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  0.0000000000000000E+0000
                              )

                           )
                           (callparan, resultdef = "Double", pos = (204,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (204,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  0.0000000000000000E+0000
                              )

                           )
                           (callparan, resultdef = "Double", pos = (204,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (204,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  1.0000000000000000E-0001
                              )

                           )
                           (callparan, resultdef = "Double", pos = (204,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (204,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  0.0000000000000000E+0000
                              )

                           )
                           (callparan, resultdef = "LongInt", pos = (204,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "LongInt", pos = (204,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 4
                              )

                           )
                           (callparan, resultdef = "LongInt", pos = (204,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "LongInt", pos = (204,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 4
                              )

                           )
                        )
                        (ordconstn, resultdef = "LongInt", pos = (204,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           value = 0
                        )
                     )
                     (ifn, resultdef = "untyped", pos = (205,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (equaln, resultdef = "Boolean", pos = (205,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (calln, resultdef = "LongInt", pos = (205,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              proc = settool(LongInt, LongInt, Double, Double, Double, Double, Double, LongInt):LongInt;CDecl
                              left =
                              (callparan, resultdef = "LongInt", pos = (205,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (ordconstn, resultdef = "LongInt", pos = (205,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 0
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (205,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (realconstn, resultdef = "Double", pos = (205,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  0.0000000000000000E+0000
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (205,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (realconstn, resultdef = "Double", pos = (205,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  0.0000000000000000E+0000
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (205,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (realconstn, resultdef = "Double", pos = (205,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  0.0000000000000000E+0000
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (205,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (realconstn, resultdef = "Double", pos = (205,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  2.0000000000000000E-0001
                                 )

                              )
                              (callparan, resultdef = "Double", pos = (205,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (realconstn, resultdef = "Double", pos = (205,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  0.0000000000000000E+0000
                                 )

                              )
                              (callparan, resultdef = "LongInt", pos = (205,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (ordconstn, resultdef = "LongInt", pos = (205,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 5
                                 )

                              )
                              (callparan, resultdef = "LongInt", pos = (205,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (ordconstn, resultdef = "LongInt", pos = (205,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value = 5
                                 )

                              )
                           )
                           (ordconstn, resultdef = "LongInt", pos = (205,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 0
                           )
                        )
                        (blockn, resultdef = "untyped", pos = (206,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (statementn, resultdef = <nil>, pos = (207,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (blockn, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (nothingn, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (tempcreaten, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       size = 4, temptypedef = "^untyped", tempinfo = $B4989520
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (assignn, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (temprefn, resultdef = "^untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          temptypedef = "^untyped", tempinfo = $B4989520
                                       )
                                       (typeconvn, resultdef = "^untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                          (calln, resultdef = "^Text", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             proc = $fpc_get_output:^Text
                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (calln, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       proc = $fpc_write_text_pchar_as_array(LongInt,var Text,constOpen Array Of Char,<const LongInt>, Boolean="TRUE")
                                       left =
                                       (callparan, resultdef = "Boolean", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (ordconstn, resultdef = "Boolean", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value = 1
                                          )

                                       )
                                       (callparan, resultdef = "LongInt", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (ordconstn, resultdef = "LongInt", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value = 7
                                          )

                                       )
                                       (callparan, resultdef = "Open Array Of Char", pos = (207,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (stringconstn, resultdef = "Constant String", pos = (207,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          )

                                       )
                                       (callparan, resultdef = "Text", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Text", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                             (derefn, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (temprefn, resultdef = "^untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   temptypedef = "^untyped", tempinfo = $B4989520
                                                )
                                             )
                                          )

                                       )
                                       (callparan, resultdef = "LongInt", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (ordconstn, resultdef = "LongInt", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value = 0
                                          )

                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (calln, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       proc = $fpc_writeln_end(var Text)
                                       left =
                                       (callparan, resultdef = "Text", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Text", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                             (derefn, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (temprefn, resultdef = "^untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   temptypedef = "^untyped", tempinfo = $B4989520
                                                )
                                             )
                                          )

                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (tempdeleten, resultdef = "untyped", pos = (207,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B4989520
                                    )

                                 )
                              )

                           )
                           (statementn, resultdef = <nil>, pos = (208,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (blockn, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (nothingn, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (tempcreaten, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       size = 4, temptypedef = "^untyped", tempinfo = $B49897C0
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (assignn, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       (temprefn, resultdef = "^untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          temptypedef = "^untyped", tempinfo = $B49897C0
                                       )
                                       (typeconvn, resultdef = "^untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                          (calln, resultdef = "^Text", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             proc = $fpc_get_output:^Text
                                          )
                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (calln, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       proc = $fpc_write_text_ansistr(LongInt,var Text,const AnsiString)
                                       left =
                                       (callparan, resultdef = "AnsiString", pos = (208,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (calln, resultdef = "AnsiString", pos = (208,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             proc = IntToStr(LongInt):AnsiString
                                             left =
                                             (callparan, resultdef = "LongInt", pos = (208,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (loadn, resultdef = "LongInt", pos = (208,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   nil
                                                   symbol = ACTIVE_SLOT
                                                )

                                             )
                                          )

                                       )
                                       (callparan, resultdef = "Text", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Text", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                             (derefn, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (temprefn, resultdef = "^untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   temptypedef = "^untyped", tempinfo = $B49897C0
                                                )
                                             )
                                          )

                                       )
                                       (callparan, resultdef = "LongInt", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (ordconstn, resultdef = "LongInt", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                             value = 0
                                          )

                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (calln, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       proc = $fpc_writeln_end(var Text)
                                       left =
                                       (callparan, resultdef = "Text", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                          (typeconvn, resultdef = "Text", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
                                             (derefn, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                (temprefn, resultdef = "^untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                                   temptypedef = "^untyped", tempinfo = $B49897C0
                                                )
                                             )
                                          )

                                       )
                                    )

                                 )
                                 (statementn, resultdef = <nil>, pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (tempdeleten, resultdef = "untyped", pos = (208,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       release_to_normal: FALSE, temptypedef = "^untyped", tempinfo = $B49897C0
                                    )

                                 )
                              )

                           )
                        )
                        nil
                        nil
                     )
                     nil
                     nil
                  )
                  nil
                  nil
               )
               nil
               nil
            )
            nil
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (210,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (210,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TForm1.SetSoftLimits(< TForm1>, Double, Double, Double, Double, Double, Double)
         methodpointer =
         (loadn, resultdef = "TForm1", pos = (210,16), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = self
         )
         left =
         (callparan, resultdef = "Double", pos = (210,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E+0001
            )

         )
         (callparan, resultdef = "Double", pos = (210,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E+0001
            )

         )
         (callparan, resultdef = "Double", pos = (210,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E+0001
            )

         )
         (callparan, resultdef = "Double", pos = (210,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "Double", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "Double", pos = (210,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (210,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "TForm1", pos = (210,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TForm1", pos = (210,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = self
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (211,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (211,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = ZoomLimits
      )

   )
)

*******************************************************************************
TForm1.FormDestroy(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (215,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (217,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (216,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (inlinen, resultdef = "Boolean", pos = (216,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (callparan, resultdef = "TList", pos = (216,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "TList", pos = (216,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LINEITEMS
               )

            )
         )
         (calln, resultdef = "untyped", pos = (217,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = TObject.Free(< TObject>)
            methodpointer =
            (loadn, resultdef = "TList", pos = (217,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LINEITEMS
            )
            left =
            (callparan, resultdef = "TList", pos = (217,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (loadn, resultdef = "TList", pos = (217,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  nil
                  symbol = LINEITEMS
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
TForm1.oglMouseWheelDown(TObject, TShiftState, TPoint,var Boolean)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (222,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (223,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (223,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (223,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = DIST
         )
         (typeconvn, resultdef = "Double", pos = (223,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (slashn, resultdef = "Extended", pos = (223,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (typeconvn, resultdef = "Extended", pos = (223,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                  (loadn, resultdef = "Double", pos = (223,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = DIST
                  )
               )
               (realconstn, resultdef = "Extended", pos = (223,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  1.2000000000000000E+0000
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (224,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (224,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Boolean", pos = (224,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = HANDLED
         )
         (ordconstn, resultdef = "Boolean", pos = (224,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TWinControl.Invalidate(< TWinControl>)
         methodpointer =
         (temprefn, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TOpenGLControl", tempinfo = $B4989520
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989520
               )

            )
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989520
                  )
                  (subscriptn, resultdef = "TOpenGLControl", pos = (225,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (225,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989520
               )

            )
            (statementn, resultdef = <nil>, pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989520
               )

            )
         )
         left =
         (callparan, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TOpenGLControl", pos = (225,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenGLControl", tempinfo = $B4989520
            )

         )
      )

   )
)

*******************************************************************************
TForm1.oglMouseWheelUp(TObject, TShiftState, TPoint,var Boolean)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (230,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (231,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (231,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Double", pos = (231,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = DIST
         )
         (typeconvn, resultdef = "Double", pos = (231,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
            (muln, resultdef = "Extended", pos = (231,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (typeconvn, resultdef = "Extended", pos = (231,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                  (loadn, resultdef = "Double", pos = (231,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = DIST
                  )
               )
               (realconstn, resultdef = "Extended", pos = (231,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value =  1.2000000000000000E+0000
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (232,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (232,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Boolean", pos = (232,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = HANDLED
         )
         (ordconstn, resultdef = "Boolean", pos = (232,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TWinControl.Invalidate(< TWinControl>)
         methodpointer =
         (temprefn, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TOpenGLControl", tempinfo = $B4989820
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989820
               )

            )
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989820
                  )
                  (subscriptn, resultdef = "TOpenGLControl", pos = (233,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (233,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989820
               )

            )
            (statementn, resultdef = <nil>, pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989820
               )

            )
         )
         left =
         (callparan, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TOpenGLControl", pos = (233,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenGLControl", tempinfo = $B4989820
            )

         )
      )

   )
)

*******************************************************************************
local TForm1.InitGL
*******************************************************************************
(blockn, resultdef = "untyped", pos = (241,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (243,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (242,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Boolean", pos = (242,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLINITIALIZED
         )
         (exitn, resultdef = "untyped", pos = (243,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
         )
         nil
         nil
      )

   )
   (statementn, resultdef = <nil>, pos = (244,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (244,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Boolean", pos = (244,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLINITIALIZED
         )
         (ordconstn, resultdef = "Boolean", pos = (244,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            value = 1
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (245,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (245,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = ZoomLimits
      )

   )
   (statementn, resultdef = <nil>, pos = (246,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (246,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TCustomScrollBar.SetPosition(< TCustomScrollBar>, LongInt)
         methodpointer =
         (temprefn, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TScrollBar", tempinfo = $B4989880
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TScrollBar", tempinfo = $B4989880
               )

            )
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TScrollBar", tempinfo = $B4989880
                  )
                  (subscriptn, resultdef = "TScrollBar", pos = (246,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (246,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = <nil>, pos = (246,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TScrollBar", tempinfo = $B4989880
               )

            )
            (statementn, resultdef = <nil>, pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TScrollBar", tempinfo = $B4989880
               )

            )
         )
         left =
         (callparan, resultdef = "LongInt", pos = (246,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "LongInt", pos = (246,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
               (inlinen, resultdef = "Int64", pos = (246,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (246,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (loadn, resultdef = "Single", pos = (246,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROTX
                     )
                  )
               )
            )

         )
         (callparan, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TScrollBar", pos = (246,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TScrollBar", tempinfo = $B4989880
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (247,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TCustomScrollBar.SetPosition(< TCustomScrollBar>, LongInt)
         methodpointer =
         (temprefn, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TScrollBar", tempinfo = $B49898E0
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TScrollBar", tempinfo = $B49898E0
               )

            )
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TScrollBar", tempinfo = $B49898E0
                  )
                  (subscriptn, resultdef = "TScrollBar", pos = (247,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (247,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadparentfpn, resultdef = <nil>, pos = (247,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                        )
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TScrollBar", tempinfo = $B49898E0
               )

            )
            (statementn, resultdef = <nil>, pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TScrollBar", tempinfo = $B49898E0
               )

            )
         )
         left =
         (callparan, resultdef = "LongInt", pos = (247,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "LongInt", pos = (247,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_int
               (inlinen, resultdef = "Int64", pos = (247,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typeconvn, resultdef = "Extended", pos = (247,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                     (loadn, resultdef = "Single", pos = (247,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROTY
                     )
                  )
               )
            )

         )
         (callparan, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TScrollBar", pos = (247,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TScrollBar", tempinfo = $B49898E0
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (248,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (248,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single, Single);CDecl>", pos = (248,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLCLEARCOLOR
         )
         left =
         (callparan, resultdef = "Single", pos = (248,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (248,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "Single", pos = (248,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (248,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "Single", pos = (248,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (248,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
         (callparan, resultdef = "Single", pos = (248,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Single", pos = (248,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  0.0000000000000000E+0000
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (249,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (249,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = <nil>
         right =
         (loadn, resultdef = "<procedure variable type of procedure(Double);CDecl>", pos = (249,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = GLCLEARDEPTH
         )
         left =
         (callparan, resultdef = "Double", pos = (249,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (realconstn, resultdef = "Double", pos = (249,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value =  1.0000000000000000E+0000
            )

         )
      )

   )
)

*******************************************************************************
TForm1.oglPaint(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (252,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (302,8), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (253,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (calln, resultdef = "Boolean", pos = (253,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = TCustomOpenGLControl.MakeCurrent(< TCustomOpenGLControl>, Boolean="FALSE"):Boolean
            methodpointer =
            (temprefn, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenGLControl", tempinfo = $B4989940
            )
            methodpointerinit =
            (blockn, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (nothingn, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (tempcreaten, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )

               )
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (assignn, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (temprefn, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        temptypedef = "TOpenGLControl", tempinfo = $B4989940
                     )
                     (subscriptn, resultdef = "TOpenGLControl", pos = (253,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (loadn, resultdef = "TForm1", pos = (253,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           nil
                           symbol = self
                        )
                     )
                  )

               )
            )
            methodpointerdone =
            (blockn, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (nothingn, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )

               )
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (tempdeleten, resultdef = "untyped", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )

               )
               (statementn, resultdef = <nil>, pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )

               )
            )
            left =
            (callparan, resultdef = "Boolean", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ordconstn, resultdef = "Boolean", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 0
               )

            )
            (callparan, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenGLControl", pos = (253,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
         )
         (blockn, resultdef = "untyped", pos = (254,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (264,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ifn, resultdef = "untyped", pos = (255,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (notn, resultdef = "Boolean", pos = (255,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Boolean", pos = (255,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = AREAINITIALIZED
                     )
                  )
                  (blockn, resultdef = "untyped", pos = (256,9), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (257,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (257,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = local TForm1.InitGL(< Pointer>)
                           left =
                           (callparan, resultdef = "^untyped", pos = (257,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadparentfpn, resultdef = "^untyped", pos = (257,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (258,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (258,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = <nil>
                           right =
                           (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (258,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = GLMATRIXMODE
                           )
                           left =
                           (callparan, resultdef = "DWord", pos = (258,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "DWord", pos = (258,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 5889
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (259,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (259,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = <nil>
                           right =
                           (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (259,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = GLLOADIDENTITY
                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (260,46), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (260,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = <nil>
                           right =
                           (loadn, resultdef = "<procedure variable type of procedure(Double, Double, Double, Double);CDecl>", pos = (260,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = GLUPERSPECTIVE
                           )
                           left =
                           (callparan, resultdef = "Double", pos = (260,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (muln, resultdef = "Double", pos = (260,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (loadn, resultdef = "Double", pos = (260,35), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    nil
                                    symbol = LIMD
                                 )
                                 (realconstn, resultdef = "Double", pos = (260,42), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    value =  1.0000000000000000E+0002
                                 )
                              )

                           )
                           (callparan, resultdef = "Double", pos = (260,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (260,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  5.0000000000000000E-0001
                              )

                           )
                           (callparan, resultdef = "Double", pos = (260,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (260,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  1.0000000000000000E+0000
                              )

                           )
                           (callparan, resultdef = "Double", pos = (260,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (realconstn, resultdef = "Double", pos = (260,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value =  4.5000000000000000E+0001
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (261,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (261,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = <nil>
                           right =
                           (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (261,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = GLMATRIXMODE
                           )
                           left =
                           (callparan, resultdef = "DWord", pos = (261,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "DWord", pos = (261,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 5888
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (262,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (calln, resultdef = "untyped", pos = (262,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           proc = <nil>
                           right =
                           (loadn, resultdef = "<procedure variable type of procedure(LongInt, LongInt, LongInt, LongInt);CDecl>", pos = (262,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = GLVIEWPORT
                           )
                           left =
                           (callparan, resultdef = "LongInt", pos = (262,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (subscriptn, resultdef = "LongInt", pos = (262,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (subscriptn, resultdef = "TOpenGLControl", pos = (262,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "TForm1", pos = (262,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "LongInt", pos = (262,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (subscriptn, resultdef = "LongInt", pos = (262,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 (subscriptn, resultdef = "TOpenGLControl", pos = (262,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                    (loadn, resultdef = "TForm1", pos = (262,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                       nil
                                       symbol = self
                                    )
                                 )
                              )

                           )
                           (callparan, resultdef = "LongInt", pos = (262,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "LongInt", pos = (262,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 0
                              )

                           )
                           (callparan, resultdef = "LongInt", pos = (262,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (ordconstn, resultdef = "LongInt", pos = (262,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 value = 0
                              )

                           )
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (263,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (263,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Boolean", pos = (263,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = AREAINITIALIZED
                           )
                           (ordconstn, resultdef = "Boolean", pos = (263,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              value = 1
                           )
                        )

                     )
                  )
                  nil
                  nil
               )

            )
            (statementn, resultdef = <nil>, pos = (266,58), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (266,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (266,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLCLEAR
                  )
                  left =
                  (callparan, resultdef = "DWord", pos = (266,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "DWord", pos = (266,57), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 16640
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (268,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (268,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (268,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLLOADIDENTITY
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (270,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (270,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Double, Double, Double, Double, Double, Double, Double, Double, Double);CDecl>", pos = (270,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLULOOKAT
                  )
                  left =
                  (callparan, resultdef = "Double", pos = (270,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,36), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,28), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Double", pos = (270,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = DIST
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Double", pos = (270,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Double", pos = (270,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (273,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (273,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single, Single);CDecl>", pos = (273,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLROTATEF
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (273,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (273,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (273,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (273,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (273,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (273,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (273,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (273,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROTX
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (274,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single, Single);CDecl>", pos = (274,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLROTATEF
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (274,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (274,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (274,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (274,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (274,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (274,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (274,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (274,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROTY
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (275,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single, Single);CDecl>", pos = (275,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLROTATEF
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (275,33), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (275,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (275,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (275,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (275,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "Single", pos = (275,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = ROTZ
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (276,48), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (276,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (276,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLTRANSLATEF
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (276,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (276,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (unaryminusn, resultdef = "Double", pos = (276,47), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (276,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CENTERZ
                           )
                        )
                     )

                  )
                  (callparan, resultdef = "Single", pos = (276,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (276,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (unaryminusn, resultdef = "Double", pos = (276,38), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (276,31), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CENTERY
                           )
                        )
                     )

                  )
                  (callparan, resultdef = "Single", pos = (276,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (typeconvn, resultdef = "Single", pos = (276,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_real_2_real
                        (unaryminusn, resultdef = "Double", pos = (276,29), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "Double", pos = (276,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = CENTERX
                           )
                        )
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (278,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (278,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (278,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLPUSHMATRIX
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (280,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (280,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (280,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLBEGIN
                  )
                  left =
                  (callparan, resultdef = "DWord", pos = (280,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "DWord", pos = (280,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (281,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (281,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (281,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLCOLOR3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (281,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (281,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (281,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (281,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (281,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (282,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (282,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (282,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (282,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (282,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (282,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (282,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (282,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (283,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (283,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (283,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (283,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (283,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (283,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (283,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (283,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0001
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (284,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (284,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (284,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLEND
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (285,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (285,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (285,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLBEGIN
                  )
                  left =
                  (callparan, resultdef = "DWord", pos = (285,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "DWord", pos = (285,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (286,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (286,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (286,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLCOLOR3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (286,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (286,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (286,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0001
                     )

                  )
                  (callparan, resultdef = "Single", pos = (286,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (286,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (287,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (287,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (287,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (287,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (287,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (287,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (287,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (287,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (287,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (288,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (288,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (288,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (288,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (288,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (288,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0001
                     )

                  )
                  (callparan, resultdef = "Single", pos = (288,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (288,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (289,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (289,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (289,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLEND
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (290,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (290,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(LongWord);CDecl>", pos = (290,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLBEGIN
                  )
                  left =
                  (callparan, resultdef = "DWord", pos = (290,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (ordconstn, resultdef = "DWord", pos = (290,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value = 1
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (291,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (291,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (291,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLCOLOR3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (291,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (291,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0001
                     )

                  )
                  (callparan, resultdef = "Single", pos = (291,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (291,20), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (291,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (291,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (292,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (292,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (292,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (292,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (292,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (292,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (292,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (292,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (293,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (293,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure(Single, Single, Single);CDecl>", pos = (293,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLVERTEX3F
                  )
                  left =
                  (callparan, resultdef = "Single", pos = (293,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (293,24), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  1.0000000000000000E+0001
                     )

                  )
                  (callparan, resultdef = "Single", pos = (293,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (293,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
                  (callparan, resultdef = "Single", pos = (293,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (realconstn, resultdef = "Single", pos = (293,19), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        value =  0.0000000000000000E+0000
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (294,12), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (294,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (294,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLEND
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (296,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (296,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TForm1.DrawLimits(< TForm1>)
                  methodpointer =
                  (loadn, resultdef = "TForm1", pos = (296,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = "TForm1", pos = (296,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (296,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (297,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (297,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TForm1.DrawList(< TForm1>)
                  methodpointer =
                  (loadn, resultdef = "TForm1", pos = (297,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = self
                  )
                  left =
                  (callparan, resultdef = "TForm1", pos = (297,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (297,15), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )

                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (299,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (299,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = <nil>
                  right =
                  (loadn, resultdef = "<procedure variable type of procedure;CDecl>", pos = (299,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = GLPOPMATRIX
                  )
               )

            )
            (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (calln, resultdef = "untyped", pos = (301,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  proc = TCustomOpenGLControl.SwapBuffers(< TCustomOpenGLControl>)
                  methodpointer =
                  (temprefn, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                  )
                  methodpointerinit =
                  (blockn, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (nothingn, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (tempcreaten, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           size = 4, temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (assignn, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (temprefn, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                           )
                           (subscriptn, resultdef = "TOpenGLControl", pos = (301,7), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              (loadn, resultdef = "TForm1", pos = (301,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                                 nil
                                 symbol = self
                              )
                           )
                        )

                     )
                  )
                  methodpointerdone =
                  (blockn, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (nothingn, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (tempdeleten, resultdef = "untyped", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                        )

                     )
                     (statementn, resultdef = <nil>, pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                        )

                     )
                  )
                  left =
                  (callparan, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (temprefn, resultdef = "TOpenGLControl", pos = (301,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        temptypedef = "TOpenGLControl", tempinfo = $B49899A0
                     )

                  )
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
TForm1.oglResize(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (306,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (308,45), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (ifn, resultdef = "untyped", pos = (307,2), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (andn, resultdef = "Boolean", pos = (307,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "Boolean", pos = (307,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = AREAINITIALIZED
            )
            (calln, resultdef = "Boolean", pos = (307,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               proc = TCustomOpenGLControl.MakeCurrent(< TCustomOpenGLControl>, Boolean="FALSE"):Boolean
               methodpointer =
               (temprefn, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )
               methodpointerinit =
               (blockn, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempcreaten, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989940
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (assignn, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        (temprefn, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           temptypedef = "TOpenGLControl", tempinfo = $B4989940
                        )
                        (subscriptn, resultdef = "TOpenGLControl", pos = (307,27), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                           (loadn, resultdef = "TForm1", pos = (307,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                              nil
                              symbol = self
                           )
                        )
                     )

                  )
               )
               methodpointerdone =
               (blockn, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (nothingn, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (tempdeleten, resultdef = "untyped", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989940
                     )

                  )
                  (statementn, resultdef = <nil>, pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (temprefn, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        temptypedef = "TOpenGLControl", tempinfo = $B4989940
                     )

                  )
               )
               left =
               (callparan, resultdef = "Boolean", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (ordconstn, resultdef = "Boolean", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     value = 0
                  )

               )
               (callparan, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (307,43), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )

               )
            )
         )
         (calln, resultdef = "untyped", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            proc = <nil>
            right =
            (loadn, resultdef = "<procedure variable type of procedure(LongInt, LongInt, LongInt, LongInt);CDecl>", pos = (308,5), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = GLVIEWPORT
            )
            left =
            (callparan, resultdef = "LongInt", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (subscriptn, resultdef = "LongInt", pos = (308,44), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "TOpenGLControl", pos = (308,34), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (308,37), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
            (callparan, resultdef = "LongInt", pos = (308,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (subscriptn, resultdef = "LongInt", pos = (308,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (subscriptn, resultdef = "TOpenGLControl", pos = (308,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (308,26), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
            (callparan, resultdef = "LongInt", pos = (308,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ordconstn, resultdef = "LongInt", pos = (308,21), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 0
               )

            )
            (callparan, resultdef = "LongInt", pos = (308,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (ordconstn, resultdef = "LongInt", pos = (308,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  value = 0
               )

            )
         )
         nil
         nil
      )

   )
)

*******************************************************************************
TForm1.sbYChange(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (312,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (313,23), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (313,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (313,4), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ROTX
         )
         (typeconvn, resultdef = "Single", pos = (313,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
            (subscriptn, resultdef = "LongInt", pos = (313,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (subscriptn, resultdef = "TScrollBar", pos = (313,11), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TForm1", pos = (313,14), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = self
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TWinControl.Invalidate(< TWinControl>)
         methodpointer =
         (temprefn, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TOpenGLControl", tempinfo = $B4989940
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )
                  (subscriptn, resultdef = "TOpenGLControl", pos = (314,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (314,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
            (statementn, resultdef = <nil>, pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
         )
         left =
         (callparan, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TOpenGLControl", pos = (314,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenGLControl", tempinfo = $B4989940
            )

         )
      )

   )
)

*******************************************************************************
TForm1.sbZChange(TObject)
*******************************************************************************
(blockn, resultdef = "untyped", pos = (318,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (319,22), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (assignn, resultdef = "untyped", pos = (319,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         (loadn, resultdef = "Single", pos = (319,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = ROTZ
         )
         (typeconvn, resultdef = "Single", pos = (319,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_int_2_real
            (subscriptn, resultdef = "LongInt", pos = (319,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (subscriptn, resultdef = "TScrollBar", pos = (319,10), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (loadn, resultdef = "TForm1", pos = (319,13), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     nil
                     symbol = self
                  )
               )
            )
         )
      )

   )
   (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (323,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TWinControl.Invalidate(< TWinControl>)
         methodpointer =
         (temprefn, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            temptypedef = "TOpenGLControl", tempinfo = $B4989940
         )
         methodpointerinit =
         (blockn, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempcreaten, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  size = 4, temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (assignn, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (temprefn, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     temptypedef = "TOpenGLControl", tempinfo = $B4989940
                  )
                  (subscriptn, resultdef = "TOpenGLControl", pos = (323,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                     (loadn, resultdef = "TForm1", pos = (323,6), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                        nil
                        symbol = self
                     )
                  )
               )

            )
         )
         methodpointerdone =
         (blockn, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (nothingn, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               )

            )
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (tempdeleten, resultdef = "untyped", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  release_to_normal: TRUE, temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
            (statementn, resultdef = <nil>, pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               (temprefn, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  temptypedef = "TOpenGLControl", tempinfo = $B4989940
               )

            )
         )
         left =
         (callparan, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (temprefn, resultdef = "TOpenGLControl", pos = (323,17), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               temptypedef = "TOpenGLControl", tempinfo = $B4989940
            )

         )
      )

   )
)

*******************************************************************************
$PREVIEW1_init;Register
*******************************************************************************
(blockn, resultdef = "untyped", pos = (327,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (28,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (3,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TLResourceList.Add(< TLResourceList>,const AnsiString,const AnsiString,constOpen Array Of AnsiString,<const LongInt>)
         methodpointer =
         (loadn, resultdef = "TLResourceList", pos = (3,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = LAZARUSRESOURCES
         )
         left =
         (callparan, resultdef = "LongInt", pos = (28,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (ordconstn, resultdef = "LongInt", pos = (28,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               value = 0
            )

         )
         (callparan, resultdef = "Open Array Of AnsiString", pos = (28,2), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Array Of Const/Constant Open Array of AnsiString", pos = (28,2), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
               (arrayconstructn, resultdef = "Array Of Const/Constant Open Array of AnsiString", pos = (28,2), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (stringconstn, resultdef = "AnsiString", pos = (27,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )
                  nil
               )
            )

         )
         (callparan, resultdef = "AnsiString", pos = (3,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (stringconstn, resultdef = "AnsiString", pos = (3,41), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (callparan, resultdef = "AnsiString", pos = (3,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (stringconstn, resultdef = "AnsiString", pos = (3,30), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            )

         )
         (callparan, resultdef = "TLResourceList", pos = (28,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TLResourceList", pos = (28,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = LAZARUSRESOURCES
            )

         )
      )

   )
)

*******************************************************************************
$main;Register
*******************************************************************************
(blockn, resultdef = "untyped", pos = (20,1), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
   (statementn, resultdef = <nil>, pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TApplication.Initialize(< TApplication>)
         methodpointer =
         (loadn, resultdef = "TApplication", pos = (22,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = "TApplication", pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TApplication", pos = (22,25), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (23,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TApplication.CreateForm(< TApplication>, TComponentClass,out <Formal type>)
         methodpointer =
         (loadn, resultdef = "TApplication", pos = (23,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = "<Formal type>", pos = (23,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TForm1", pos = (23,39), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = FORM1
            )

         )
         (callparan, resultdef = "Class Of TComponent", pos = (23,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (typeconvn, resultdef = "Class Of TComponent", pos = (23,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0, convtype = tc_equal
               (loadvmtaddrn, resultdef = "Class Of TForm1", pos = (23,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  (typen, resultdef = "TForm1", pos = (23,32), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
                  )
               )
            )

         )
         (callparan, resultdef = "TApplication", pos = (23,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TApplication", pos = (23,40), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = APPLICATION
            )

         )
      )

   )
   (statementn, resultdef = <nil>, pos = (24,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
      (calln, resultdef = "untyped", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
         proc = TApplication.Run(< TApplication>)
         methodpointer =
         (loadn, resultdef = "TApplication", pos = (24,3), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            nil
            symbol = APPLICATION
         )
         left =
         (callparan, resultdef = "TApplication", pos = (24,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
            (loadn, resultdef = "TApplication", pos = (24,18), loc = LOC_INVALID, expectloc = LOC_INVALID, intregs = 0, fpuregs = 0
               nil
               symbol = APPLICATION
            )

         )
      )

   )
)
